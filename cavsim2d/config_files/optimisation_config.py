optimisation_config = {
    'initial points': 5,
    'method': {
        'LHS': {'seed': 5},
        # 'Sobol Sequence': {'index': 2},
        # 'Random': {},
        # 'Uniform': {},
    },
    'cell type': 'mid-cell',
    # 'mid cell': [1, 2, 3, 3, 6, 5, 2],  # must enter if mid-end cell selected
    'optimisation by': 'pareto',
    'crossover factor': 5,
    'elites for crossover': 2,
    'mutation factor': 5,
    'chaos factor': 5,
    'tune freq.': 801.58,
    'solver': 'NGSolveMEVP',
    'tune variable': 'Req',
    'processes': 1,
    'no. of generation': 2,
    'normalisation length': 57.7,
    'bounds': {'A': [20.0, 80.0],
               'B': [20.0, 80.0],
               'a': [10.0, 60.0],
               'b': [10., 60.0],
               'Ri': [60.0, 85.0],
               'L': [93.5, 93.5],
               'Req': [170.0, 170.0]},
    'constraints': {'Epk/Eacc []': [1.0, 3.0],
                    'Bpk/Eacc [mT/MV/m]': [1.0, 5.0]
                    },
    'objectives': [
        # ['equal', 'freq [MHz]', 801.58],
        ['min', 'Epk/Eacc []'],
        ['min', 'Bpk/Eacc [mT/MV/m]'],
        # ['min', 'ZL', [1, 2, 5]],
    ],
    'weights': [1, 1],
    'uq': {
        'option': True,
        'processes': 2,
        'variables': ['A', 'a'],
        'delta': [0.05, 0.05],
        'distribution': 'gaussian',
        # 'method': ['QMC', 'LHS', 1000],
        # 'method': ['QMC', 'Sobol', 1000],
        # 'method': ['Qudrature', 'Gaussian', 1000],
        'method': ['Quadrature', 'Stroud3'],
        # 'method': ['Quadrature', 'Stroud5'],
        # 'gaussian': ['Quadrature', 'Gaussian'],
        # 'from file': ['<file path>', columns],
        'cell type': 'mid-cell'
    }
}
