Search.setIndex({"alltitles": {"Advanced": [[13, "advanced"]], "Cavity Tuning": [[13, "cavity-tuning"]], "Configuration dictionaries": [[13, "configuration-dictionaries"]], "Eigenmode Analysis": [[11, "eigenmode-analysis"]], "Eigenmode analysis": [[13, "eigenmode-analysis"]], "Examples": [[13, "examples"]], "Indices and tables": [[10, "indices-and-tables"]], "Installation": [[13, "installation"]], "Introduction": [[11, "introduction"]], "Module contents": [[0, "module-cavsim2d"], [1, "module-cavsim2d.analysis"], [2, "module-cavsim2d.analysis.tune"], [3, "module-cavsim2d.analysis.uq"], [4, "module-cavsim2d.analysis.uq.dakota_scripts"], [5, "module-cavsim2d.analysis.wakefield"], [6, "module-cavsim2d.data_module"], [7, "module-cavsim2d.solvers"], [8, "module-cavsim2d.solvers.NGSolve"], [9, "module-cavsim2d.utils"]], "Modules:": [[10, null]], "Optimisation": [[11, "optimisation"], [13, "optimisation"]], "Parallelisation": [[13, "parallelisation"]], "Quickstart": [[10, null]], "Submodules": [[0, "submodules"], [2, "submodules"], [4, "submodules"], [5, "submodules"], [6, "submodules"], [8, "submodules"], [9, "submodules"]], "Subpackages": [[0, "subpackages"], [1, "subpackages"], [3, "subpackages"], [7, "subpackages"]], "Third party code": [[13, "third-party-code"]], "Uncertainty Quantification": [[11, "uncertainty-quantification"], [13, "uncertainty-quantification"], [13, "id5"]], "Understanding the geometry types": [[13, "understanding-the-geometry-types"]], "Visualising the mesh and field profiles": [[13, "visualising-the-mesh-and-field-profiles"]], "Wakefield": [[13, "wakefield"]], "Wakefield Analysis": [[11, "wakefield-analysis"]], "cavsim2d": [[12, "cavsim2d"]], "cavsim2d documentation!": [[10, "cavsim2d-documentation"]], "cavsim2d package": [[0, "cavsim2d-package"]], "cavsim2d.analysis package": [[1, "cavsim2d-analysis-package"]], "cavsim2d.analysis.tune package": [[2, "cavsim2d-analysis-tune-package"]], "cavsim2d.analysis.tune.pyTuner module": [[2, "module-cavsim2d.analysis.tune.pyTuner"]], "cavsim2d.analysis.tune.tuner module": [[2, "module-cavsim2d.analysis.tune.tuner"]], "cavsim2d.analysis.uq package": [[3, "cavsim2d-analysis-uq-package"]], "cavsim2d.analysis.uq.dakota_scripts package": [[4, "cavsim2d-analysis-uq-dakota-scripts-package"]], "cavsim2d.analysis.uq.dakota_scripts.generate_nodes module": [[4, "cavsim2d-analysis-uq-dakota-scripts-generate-nodes-module"]], "cavsim2d.analysis.uq.dakota_scripts.py_dakota module": [[4, "cavsim2d-analysis-uq-dakota-scripts-py-dakota-module"]], "cavsim2d.analysis.uq.dakota_scripts.pycall module": [[4, "cavsim2d-analysis-uq-dakota-scripts-pycall-module"]], "cavsim2d.analysis.uq.dakota_scripts.write_dakota_input module": [[4, "module-cavsim2d.analysis.uq.dakota_scripts.write_dakota_input"]], "cavsim2d.analysis.wakefield package": [[5, "cavsim2d-analysis-wakefield-package"]], "cavsim2d.analysis.wakefield.abci_code module": [[5, "module-cavsim2d.analysis.wakefield.abci_code"]], "cavsim2d.analysis.wakefield.abci_geometry module": [[5, "module-cavsim2d.analysis.wakefield.abci_geometry"]], "cavsim2d.analysis.wakefield.geometry module": [[5, "module-cavsim2d.analysis.wakefield.geometry"]], "cavsim2d.cavity module": [[0, "module-cavsim2d.cavity"]], "cavsim2d.data_module package": [[6, "cavsim2d-data-module-package"]], "cavsim2d.data_module.abci_data module": [[6, "module-cavsim2d.data_module.abci_data"]], "cavsim2d.solvers package": [[7, "cavsim2d-solvers-package"]], "cavsim2d.solvers.NGSolve package": [[8, "cavsim2d-solvers-ngsolve-package"]], "cavsim2d.solvers.NGSolve.eigen_ngsolve module": [[8, "module-cavsim2d.solvers.NGSolve.eigen_ngsolve"]], "cavsim2d.utils package": [[9, "cavsim2d-utils-package"]], "cavsim2d.utils.shared_functions module": [[9, "module-cavsim2d.utils.shared_functions"]], "setup module": [[14, "setup-module"]]}, "docnames": ["cavsim2d", "cavsim2d.analysis", "cavsim2d.analysis.tune", "cavsim2d.analysis.uq", "cavsim2d.analysis.uq.dakota_scripts", "cavsim2d.analysis.wakefield", "cavsim2d.data_module", "cavsim2d.solvers", "cavsim2d.solvers.NGSolve", "cavsim2d.utils", "index", "introduction", "modules", "quickstart", "setup"], "envversion": {"sphinx": 61, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "sphinxcontrib.bibtex": 9}, "filenames": ["cavsim2d.rst", "cavsim2d.analysis.rst", "cavsim2d.analysis.tune.rst", "cavsim2d.analysis.uq.rst", "cavsim2d.analysis.uq.dakota_scripts.rst", "cavsim2d.analysis.wakefield.rst", "cavsim2d.data_module.rst", "cavsim2d.solvers.rst", "cavsim2d.solvers.NGSolve.rst", "cavsim2d.utils.rst", "index.rst", "introduction.rst", "modules.rst", "quickstart.rst", "setup.rst"], "indexentries": {"abci (class in cavsim2d.analysis.wakefield.abci_code)": [[5, "cavsim2d.analysis.wakefield.abci_code.ABCI", false]], "abci_bp_l() (cavsim2d.analysis.wakefield.abci_code.abci method)": [[5, "cavsim2d.analysis.wakefield.abci_code.ABCI.abci_bp_L", false]], "abci_bp_l() (cavsim2d.analysis.wakefield.abci_code.abci_flattop method)": [[5, "cavsim2d.analysis.wakefield.abci_code.ABCI_flattop.abci_bp_L", false]], "abci_bp_r() (cavsim2d.analysis.wakefield.abci_code.abci method)": [[5, "cavsim2d.analysis.wakefield.abci_code.ABCI.abci_bp_R", false]], "abci_bp_r() (cavsim2d.analysis.wakefield.abci_code.abci_flattop method)": [[5, "cavsim2d.analysis.wakefield.abci_code.ABCI_flattop.abci_bp_R", false]], "abci_flattop (class in cavsim2d.analysis.wakefield.abci_code)": [[5, "cavsim2d.analysis.wakefield.abci_code.ABCI_flattop", false]], "abci_m() (cavsim2d.analysis.wakefield.abci_code.abci method)": [[5, "cavsim2d.analysis.wakefield.abci_code.ABCI.abci_M", false]], "abci_m() (cavsim2d.analysis.wakefield.abci_code.abci_flattop method)": [[5, "cavsim2d.analysis.wakefield.abci_code.ABCI_flattop.abci_M", false]], "abci_n1_l() (cavsim2d.analysis.wakefield.abci_code.abci method)": [[5, "cavsim2d.analysis.wakefield.abci_code.ABCI.abci_n1_L", false]], "abci_n1_l() (cavsim2d.analysis.wakefield.abci_code.abci_flattop method)": [[5, "cavsim2d.analysis.wakefield.abci_code.ABCI_flattop.abci_n1_L", false]], "abci_n1_r() (cavsim2d.analysis.wakefield.abci_code.abci method)": [[5, "cavsim2d.analysis.wakefield.abci_code.ABCI.abci_n1_R", false]], "abci_n1_r() (cavsim2d.analysis.wakefield.abci_code.abci_flattop method)": [[5, "cavsim2d.analysis.wakefield.abci_code.ABCI_flattop.abci_n1_R", false]], "abcidata (class in cavsim2d.data_module.abci_data)": [[6, "cavsim2d.data_module.abci_data.ABCIData", false]], "abcidataextraction (class in cavsim2d.data_module.abci_data)": [[6, "cavsim2d.data_module.abci_data.ABCIDataExtraction", false]], "abcigeometry (class in cavsim2d.analysis.wakefield.abci_geometry)": [[5, "cavsim2d.analysis.wakefield.abci_geometry.ABCIGeometry", false]], "add_cavity() (cavsim2d.cavity.cavities method)": [[0, "cavsim2d.cavity.Cavities.add_cavity", false]], "add_text() (in module cavsim2d.cavity)": [[0, "cavsim2d.cavity.add_text", false]], "all_equal() (cavsim2d.analysis.tune.pytuner.pytunengsolve static method)": [[2, "cavsim2d.analysis.tune.pyTuner.PyTuneNGSolve.all_equal", false]], "arcto() (cavsim2d.cavity.cavities static method)": [[0, "cavsim2d.cavity.Cavities.arcTo", false]], "arcto() (in module cavsim2d.utils.shared_functions)": [[9, "cavsim2d.utils.shared_functions.arcTo", false]], "arcto2() (cavsim2d.cavity.cavities static method)": [[0, "cavsim2d.cavity.Cavities.arcTo2", false]], "arctotheta() (in module cavsim2d.utils.shared_functions)": [[9, "cavsim2d.utils.shared_functions.arcToTheta", false]], "area_pareto_fronts() (in module cavsim2d.utils.shared_functions)": [[9, "cavsim2d.utils.shared_functions.area_pareto_fronts", false]], "axis_data_coords_sys_transform() (in module cavsim2d.cavity)": [[0, "cavsim2d.cavity.axis_data_coords_sys_transform", false]], "c1_leg_monomial_integral() (in module cavsim2d.utils.shared_functions)": [[9, "cavsim2d.utils.shared_functions.c1_leg_monomial_integral", false]], "calc_cutoff() (cavsim2d.cavity.cavities static method)": [[0, "cavsim2d.cavity.Cavities.calc_cutoff", false]], "calc_limits() (cavsim2d.cavity.cavities method)": [[0, "cavsim2d.cavity.Cavities.calc_limits", false]], "calc_op_freq() (cavsim2d.cavity.cavity method)": [[0, "cavsim2d.cavity.Cavity.calc_op_freq", false]], "calculate_alpha() (in module cavsim2d.utils.shared_functions)": [[9, "cavsim2d.utils.shared_functions.calculate_alpha", false]], "calculate_beampipe_cutoff() (cavsim2d.cavity.cavities static method)": [[0, "cavsim2d.cavity.Cavities.calculate_beampipe_cutoff", false]], "calculate_bounded_area() (in module cavsim2d.utils.shared_functions)": [[9, "cavsim2d.utils.shared_functions.calculate_bounded_area", false]], "calculate_hypervolumes() (cavsim2d.cavity.optimisation static method)": [[0, "cavsim2d.cavity.Optimisation.calculate_hypervolumes", false]], "cavgeom_ngsolve() (cavsim2d.solvers.ngsolve.eigen_ngsolve.ngsolvemevp method)": [[8, "cavsim2d.solvers.NGSolve.eigen_ngsolve.NGSolveMEVP.cavgeom_ngsolve", false]], "cavities (class in cavsim2d.cavity)": [[0, "cavsim2d.cavity.Cavities", false]], "cavity (class in cavsim2d.cavity)": [[0, "cavsim2d.cavity.Cavity", false]], "cavity() (cavsim2d.analysis.wakefield.abci_geometry.abcigeometry method)": [[5, "cavsim2d.analysis.wakefield.abci_geometry.ABCIGeometry.cavity", false]], "cavity() (cavsim2d.solvers.ngsolve.eigen_ngsolve.ngsolvemevp method)": [[8, "cavsim2d.solvers.NGSolve.eigen_ngsolve.NGSolveMEVP.cavity", false]], "cavity.cav.run_tune() (in module cavsim2d.cavity)": [[0, "cavsim2d.cavity.Cavity.cav.run_tune", false]], "cavity_flattop() (cavsim2d.analysis.wakefield.abci_geometry.abcigeometry method)": [[5, "cavsim2d.analysis.wakefield.abci_geometry.ABCIGeometry.cavity_flattop", false]], "cavity_flattop() (cavsim2d.solvers.ngsolve.eigen_ngsolve.ngsolvemevp method)": [[8, "cavsim2d.solvers.NGSolve.eigen_ngsolve.NGSolveMEVP.cavity_flattop", false]], "cavity_multicell() (cavsim2d.solvers.ngsolve.eigen_ngsolve.ngsolvemevp method)": [[8, "cavsim2d.solvers.NGSolve.eigen_ngsolve.NGSolveMEVP.cavity_multicell", false]], "cavsim2d": [[0, "module-cavsim2d", false]], "cavsim2d.analysis": [[1, "module-cavsim2d.analysis", false]], "cavsim2d.analysis.tune": [[2, "module-cavsim2d.analysis.tune", false]], "cavsim2d.analysis.tune.pytuner": [[2, "module-cavsim2d.analysis.tune.pyTuner", false]], "cavsim2d.analysis.tune.tuner": [[2, "module-cavsim2d.analysis.tune.tuner", false]], "cavsim2d.analysis.uq": [[3, "module-cavsim2d.analysis.uq", false]], "cavsim2d.analysis.uq.dakota_scripts": [[4, "module-cavsim2d.analysis.uq.dakota_scripts", false]], "cavsim2d.analysis.uq.dakota_scripts.write_dakota_input": [[4, "module-cavsim2d.analysis.uq.dakota_scripts.write_dakota_input", false]], "cavsim2d.analysis.wakefield": [[5, "module-cavsim2d.analysis.wakefield", false]], "cavsim2d.analysis.wakefield.abci_code": [[5, "module-cavsim2d.analysis.wakefield.abci_code", false]], "cavsim2d.analysis.wakefield.abci_geometry": [[5, "module-cavsim2d.analysis.wakefield.abci_geometry", false]], "cavsim2d.analysis.wakefield.geometry": [[5, "module-cavsim2d.analysis.wakefield.geometry", false]], "cavsim2d.cavity": [[0, "module-cavsim2d.cavity", false]], "cavsim2d.data_module": [[6, "module-cavsim2d.data_module", false]], "cavsim2d.data_module.abci_data": [[6, "module-cavsim2d.data_module.abci_data", false]], "cavsim2d.solvers": [[7, "module-cavsim2d.solvers", false]], "cavsim2d.solvers.ngsolve": [[8, "module-cavsim2d.solvers.NGSolve", false]], "cavsim2d.solvers.ngsolve.eigen_ngsolve": [[8, "module-cavsim2d.solvers.NGSolve.eigen_ngsolve", false]], "cavsim2d.utils": [[9, "module-cavsim2d.utils", false]], "cavsim2d.utils.shared_functions": [[9, "module-cavsim2d.utils.shared_functions", false]], "chaos() (cavsim2d.cavity.optimisation method)": [[0, "cavsim2d.cavity.Optimisation.chaos", false]], "check_uq_config() (cavsim2d.cavity.cavities method)": [[0, "cavsim2d.cavity.Cavities.check_uq_config", false]], "checks() (cavsim2d.data_module.abci_data.abcidata method)": [[6, "cavsim2d.data_module.abci_data.ABCIData.checks", false]], "cn_gauss() (in module cavsim2d.utils.shared_functions)": [[9, "cavsim2d.utils.shared_functions.cn_gauss", false]], "cn_leg_03_1() (in module cavsim2d.utils.shared_functions)": [[9, "cavsim2d.utils.shared_functions.cn_leg_03_1", false]], "cn_leg_03_xiu() (in module cavsim2d.utils.shared_functions)": [[9, "cavsim2d.utils.shared_functions.cn_leg_03_xiu", false]], "cn_leg_05_1() (in module cavsim2d.utils.shared_functions)": [[9, "cavsim2d.utils.shared_functions.cn_leg_05_1", false]], "cn_leg_05_2() (in module cavsim2d.utils.shared_functions)": [[9, "cavsim2d.utils.shared_functions.cn_leg_05_2", false]], "color_pareto() (cavsim2d.cavity.optimisation static method)": [[0, "cavsim2d.cavity.Optimisation.color_pareto", false]], "compare_power() (cavsim2d.cavity.cavities method)": [[0, "cavsim2d.cavity.Cavities.compare_power", false]], "copyfiles() (cavsim2d.cavity.optimisation static method)": [[0, "cavsim2d.cavity.Optimisation.copyFiles", false]], "createfolder() (cavsim2d.analysis.wakefield.abci_geometry.abcigeometry static method)": [[5, "cavsim2d.analysis.wakefield.abci_geometry.ABCIGeometry.createFolder", false]], "createfolder() (cavsim2d.solvers.ngsolve.eigen_ngsolve.ngsolvemevp static method)": [[8, "cavsim2d.solvers.NGSolve.eigen_ngsolve.NGSolveMEVP.createFolder", false]], "crossover() (cavsim2d.cavity.optimisation method)": [[0, "cavsim2d.cavity.Optimisation.crossover", false]], "dakota (class in cavsim2d.analysis.uq.dakota_scripts.write_dakota_input)": [[4, "cavsim2d.analysis.uq.dakota_scripts.write_dakota_input.Dakota", false]], "dakota (class in cavsim2d.cavity)": [[0, "cavsim2d.cavity.Dakota", false]], "define_operating_points() (cavsim2d.cavity.cavities method)": [[0, "cavsim2d.cavity.Cavities.define_operating_points", false]], "define_operating_points() (cavsim2d.cavity.cavity method)": [[0, "cavsim2d.cavity.Cavity.define_operating_points", false]], "ea() (cavsim2d.cavity.optimisation method)": [[0, "cavsim2d.cavity.Optimisation.ea", false]], "eigen3d() (cavsim2d.solvers.ngsolve.eigen_ngsolve.ngsolvemevp static method)": [[8, "cavsim2d.solvers.NGSolve.eigen_ngsolve.NGSolveMEVP.eigen3d", false]], "ell_ips_grads() (cavsim2d.solvers.ngsolve.eigen_ngsolve.ngsolvemevp static method)": [[8, "cavsim2d.solvers.NGSolve.eigen_ngsolve.NGSolveMEVP.ell_ips_grads", false]], "ellipse_tangent() (in module cavsim2d.utils.shared_functions)": [[9, "cavsim2d.utils.shared_functions.ellipse_tangent", false]], "enforce_req_continuity() (in module cavsim2d.utils.shared_functions)": [[9, "cavsim2d.utils.shared_functions.enforce_Req_continuity", false]], "environment() (cavsim2d.analysis.uq.dakota_scripts.write_dakota_input.dakota method)": [[4, "cavsim2d.analysis.uq.dakota_scripts.write_dakota_input.Dakota.environment", false]], "environment() (cavsim2d.cavity.dakota method)": [[0, "cavsim2d.cavity.Dakota.environment", false]], "evaluate_qois() (cavsim2d.solvers.ngsolve.eigen_ngsolve.ngsolvemevp static method)": [[8, "cavsim2d.solvers.NGSolve.eigen_ngsolve.NGSolveMEVP.evaluate_qois", false]], "excel_reader() (cavsim2d.data_module.abci_data.abcidataextraction static method)": [[6, "cavsim2d.data_module.abci_data.ABCIDataExtraction.excel_reader", false]], "extend_pareto() (in module cavsim2d.utils.shared_functions)": [[9, "cavsim2d.utils.shared_functions.extend_pareto", false]], "f2b_slashes() (in module cavsim2d.utils.shared_functions)": [[9, "cavsim2d.utils.shared_functions.f2b_slashes", false]], "find_all_intersections() (in module cavsim2d.utils.shared_functions)": [[9, "cavsim2d.utils.shared_functions.find_all_intersections", false]], "find_folders_with_tag() (cavsim2d.cavity.cavities static method)": [[0, "cavsim2d.cavity.Cavities.find_folders_with_tag", false]], "gauss() (cavsim2d.solvers.ngsolve.eigen_ngsolve.ngsolvemevp method)": [[8, "cavsim2d.solvers.NGSolve.eigen_ngsolve.NGSolveMEVP.gauss", false]], "gaussian_deform() (cavsim2d.solvers.ngsolve.eigen_ngsolve.ngsolvemevp method)": [[8, "cavsim2d.solvers.NGSolve.eigen_ngsolve.NGSolveMEVP.gaussian_deform", false]], "generate_first_men() (cavsim2d.cavity.optimisation method)": [[0, "cavsim2d.cavity.Optimisation.generate_first_men", false]], "geometry (class in cavsim2d.analysis.wakefield.geometry)": [[5, "cavsim2d.analysis.wakefield.geometry.Geometry", false]], "geometry_from_array() (cavsim2d.solvers.ngsolve.eigen_ngsolve.ngsolvemevp method)": [[8, "cavsim2d.solvers.NGSolve.eigen_ngsolve.NGSolveMEVP.geometry_from_array", false]], "geometry_from_file() (cavsim2d.solvers.ngsolve.eigen_ngsolve.ngsolvemevp method)": [[8, "cavsim2d.solvers.NGSolve.eigen_ngsolve.NGSolveMEVP.geometry_from_file", false]], "get_abci_data() (cavsim2d.cavity.cavity method)": [[0, "cavsim2d.cavity.Cavity.get_abci_data", false]], "get_data() (cavsim2d.data_module.abci_data.abcidata method)": [[6, "cavsim2d.data_module.abci_data.ABCIData.get_data", false]], "get_default_operating_points() (cavsim2d.cavity.operationpoints method)": [[0, "cavsim2d.cavity.OperationPoints.get_default_operating_points", false]], "get_eigenmode_qois() (cavsim2d.cavity.cavities method)": [[0, "cavsim2d.cavity.Cavities.get_eigenmode_qois", false]], "get_eigenmode_qois() (cavsim2d.cavity.cavity method)": [[0, "cavsim2d.cavity.Cavity.get_eigenmode_qois", false]], "get_ngsolve_tune_res() (cavsim2d.cavity.cavity method)": [[0, "cavsim2d.cavity.Cavity.get_ngsolve_tune_res", false]], "get_peaks() (cavsim2d.data_module.abci_data.abcidata method)": [[6, "cavsim2d.data_module.abci_data.ABCIData.get_peaks", false]], "get_power() (cavsim2d.cavity.cavity method)": [[0, "cavsim2d.cavity.Cavity.get_power", false]], "get_power_qois() (cavsim2d.cavity.cavities method)": [[0, "cavsim2d.cavity.Cavities.get_power_qois", false]], "get_power_uq() (cavsim2d.cavity.cavity method)": [[0, "cavsim2d.cavity.Cavity.get_power_uq", false]], "get_qoi_value() (in module cavsim2d.utils.shared_functions)": [[9, "cavsim2d.utils.shared_functions.get_qoi_value", false]], "get_qois_value() (in module cavsim2d.cavity)": [[0, "cavsim2d.cavity.get_qois_value", false]], "get_surface_resistance() (in module cavsim2d.cavity)": [[0, "cavsim2d.cavity.get_surface_resistance", false]], "get_tune_res() (cavsim2d.cavity.cavities method)": [[0, "cavsim2d.cavity.Cavities.get_tune_res", false]], "get_uq_fm_results() (cavsim2d.cavity.cavity method)": [[0, "cavsim2d.cavity.Cavity.get_uq_fm_results", false]], "get_uq_hom_results() (cavsim2d.cavity.cavity method)": [[0, "cavsim2d.cavity.Cavity.get_uq_hom_results", false]], "get_uq_post() (cavsim2d.cavity.cavity method)": [[0, "cavsim2d.cavity.Cavity.get_uq_post", false]], "get_wakefield_data() (in module cavsim2d.utils.shared_functions)": [[9, "cavsim2d.utils.shared_functions.get_wakefield_data", false]], "get_wakefield_objectives_value() (in module cavsim2d.cavity)": [[0, "cavsim2d.cavity.get_wakefield_objectives_value", false]], "get_wakefield_qois() (cavsim2d.cavity.cavities method)": [[0, "cavsim2d.cavity.Cavities.get_wakefield_qois", false]], "get_wakefield_qois() (cavsim2d.cavity.cavity method)": [[0, "cavsim2d.cavity.Cavity.get_wakefield_qois", false]], "inspect() (cavsim2d.cavity.cavity method)": [[0, "cavsim2d.cavity.Cavity.inspect", false]], "interface() (cavsim2d.analysis.uq.dakota_scripts.write_dakota_input.dakota method)": [[4, "cavsim2d.analysis.uq.dakota_scripts.write_dakota_input.Dakota.interface", false]], "interface() (cavsim2d.cavity.dakota method)": [[0, "cavsim2d.cavity.Dakota.interface", false]], "interpolate_pareto() (in module cavsim2d.utils.shared_functions)": [[9, "cavsim2d.utils.shared_functions.interpolate_pareto", false]], "jac() (in module cavsim2d.utils.shared_functions)": [[9, "cavsim2d.utils.shared_functions.jac", false]], "join_excel() (cavsim2d.data_module.abci_data.abcidataextraction method)": [[6, "cavsim2d.data_module.abci_data.ABCIDataExtraction.join_excel", false]], "line_intersection() (in module cavsim2d.utils.shared_functions)": [[9, "cavsim2d.utils.shared_functions.line_intersection", false]], "lineto() (cavsim2d.cavity.cavities static method)": [[0, "cavsim2d.cavity.Cavities.lineTo", false]], "lineto() (in module cavsim2d.utils.shared_functions)": [[9, "cavsim2d.utils.shared_functions.lineTo", false]], "linspace() (cavsim2d.cavity.cavities static method)": [[0, "cavsim2d.cavity.Cavities.linspace", false]], "linspace() (in module cavsim2d.utils.shared_functions)": [[9, "cavsim2d.utils.shared_functions.linspace", false]], "load() (cavsim2d.cavity.cavity method)": [[0, "cavsim2d.cavity.Cavity.load", false]], "load_fields() (cavsim2d.solvers.ngsolve.eigen_ngsolve.ngsolvemevp static method)": [[8, "cavsim2d.solvers.NGSolve.eigen_ngsolve.NGSolveMEVP.load_fields", false]], "load_mesh() (cavsim2d.solvers.ngsolve.eigen_ngsolve.ngsolvemevp static method)": [[8, "cavsim2d.solvers.NGSolve.eigen_ngsolve.NGSolveMEVP.load_mesh", false]], "load_operating_point() (cavsim2d.cavity.operationpoints method)": [[0, "cavsim2d.cavity.OperationPoints.load_operating_point", false]], "load_plot_from_json() (cavsim2d.cavity.cavities method)": [[0, "cavsim2d.cavity.Cavities.load_plot_from_json", false]], "load_shape_space() (cavsim2d.cavity.cavity method)": [[0, "cavsim2d.cavity.Cavity.load_shape_space", false]], "make_excel_summary() (cavsim2d.cavity.cavities method)": [[0, "cavsim2d.cavity.Cavities.make_excel_summary", false]], "make_latex_summary_tables() (cavsim2d.cavity.cavities method)": [[0, "cavsim2d.cavity.Cavities.make_latex_summary_tables", false]], "method() (cavsim2d.analysis.uq.dakota_scripts.write_dakota_input.dakota method)": [[4, "cavsim2d.analysis.uq.dakota_scripts.write_dakota_input.Dakota.method", false]], "method() (cavsim2d.cavity.dakota method)": [[0, "cavsim2d.cavity.Dakota.method", false]], "module": [[0, "module-cavsim2d", false], [0, "module-cavsim2d.cavity", false], [1, "module-cavsim2d.analysis", false], [2, "module-cavsim2d.analysis.tune", false], [2, "module-cavsim2d.analysis.tune.pyTuner", false], [2, "module-cavsim2d.analysis.tune.tuner", false], [3, "module-cavsim2d.analysis.uq", false], [4, "module-cavsim2d.analysis.uq.dakota_scripts", false], [4, "module-cavsim2d.analysis.uq.dakota_scripts.write_dakota_input", false], [5, "module-cavsim2d.analysis.wakefield", false], [5, "module-cavsim2d.analysis.wakefield.abci_code", false], [5, "module-cavsim2d.analysis.wakefield.abci_geometry", false], [5, "module-cavsim2d.analysis.wakefield.geometry", false], [6, "module-cavsim2d.data_module", false], [6, "module-cavsim2d.data_module.abci_data", false], [7, "module-cavsim2d.solvers", false], [8, "module-cavsim2d.solvers.NGSolve", false], [8, "module-cavsim2d.solvers.NGSolve.eigen_ngsolve", false], [9, "module-cavsim2d.utils", false], [9, "module-cavsim2d.utils.shared_functions", false]], "multiple_folders_data() (cavsim2d.data_module.abci_data.abcidataextraction method)": [[6, "cavsim2d.data_module.abci_data.ABCIDataExtraction.multiple_folders_data", false]], "multiple_folders_data_parallel() (cavsim2d.data_module.abci_data.abcidataextraction method)": [[6, "cavsim2d.data_module.abci_data.ABCIDataExtraction.multiple_folders_data_parallel", false]], "mutation() (cavsim2d.cavity.optimisation method)": [[0, "cavsim2d.cavity.Optimisation.mutation", false]], "negate_list() (cavsim2d.cavity.optimisation static method)": [[0, "cavsim2d.cavity.Optimisation.negate_list", false]], "ngsolvemevp (class in cavsim2d.solvers.ngsolve.eigen_ngsolve)": [[8, "cavsim2d.solvers.NGSolve.eigen_ngsolve.NGSolveMEVP", false]], "nodes_to_cst_sweep_input() (cavsim2d.cavity.dakota method)": [[0, "cavsim2d.cavity.Dakota.nodes_to_cst_sweep_input", false]], "normal_dist() (in module cavsim2d.utils.shared_functions)": [[9, "cavsim2d.utils.shared_functions.normal_dist", false]], "operationpoints (class in cavsim2d.cavity)": [[0, "cavsim2d.cavity.OperationPoints", false]], "optimisation (class in cavsim2d.cavity)": [[0, "cavsim2d.cavity.Optimisation", false]], "overwritefolder() (cavsim2d.cavity.optimisation static method)": [[0, "cavsim2d.cavity.Optimisation.overwriteFolder", false]], "pareto_front() (cavsim2d.cavity.optimisation method)": [[0, "cavsim2d.cavity.Optimisation.pareto_front", false]], "pareto_front_() (cavsim2d.cavity.optimisation method)": [[0, "cavsim2d.cavity.Optimisation.pareto_front_", false]], "pillbox (class in cavsim2d.cavity)": [[0, "cavsim2d.cavity.Pillbox", false]], "pillbox() (cavsim2d.solvers.ngsolve.eigen_ngsolve.ngsolvemevp method)": [[8, "cavsim2d.solvers.NGSolve.eigen_ngsolve.NGSolveMEVP.pillbox", false]], "plot() (cavsim2d.cavity.cavities method)": [[0, "cavsim2d.cavity.Cavities.plot", false]], "plot() (cavsim2d.cavity.cavity method)": [[0, "cavsim2d.cavity.Cavity.plot", false]], "plot() (cavsim2d.cavity.pillbox method)": [[0, "cavsim2d.cavity.Pillbox.plot", false]], "plot() (cavsim2d.cavity.rfgun method)": [[0, "cavsim2d.cavity.RFGun.plot", false]], "plot_animate_wakefield() (cavsim2d.cavity.cavity method)": [[0, "cavsim2d.cavity.Cavity.plot_animate_wakefield", false]], "plot_axis_fields() (cavsim2d.cavity.cavities method)": [[0, "cavsim2d.cavity.Cavities.plot_axis_fields", false]], "plot_bands() (cavsim2d.data_module.abci_data.abcidata method)": [[6, "cavsim2d.data_module.abci_data.ABCIData.plot_bands", false]], "plot_cavities_contour() (cavsim2d.cavity.cavities method)": [[0, "cavsim2d.cavity.Cavities.plot_cavities_contour", false]], "plot_cavities_contour_dimension() (cavsim2d.cavity.cavities method)": [[0, "cavsim2d.cavity.Cavities.plot_cavities_contour_dimension", false]], "plot_compare_all_bar() (cavsim2d.cavity.cavities method)": [[0, "cavsim2d.cavity.Cavities.plot_compare_all_bar", false]], "plot_compare_all_scatter() (cavsim2d.cavity.cavities method)": [[0, "cavsim2d.cavity.Cavities.plot_compare_all_scatter", false]], "plot_compare_bar() (cavsim2d.cavity.cavities method)": [[0, "cavsim2d.cavity.Cavities.plot_compare_bar", false]], "plot_compare_eigenmode() (cavsim2d.cavity.cavities method)": [[0, "cavsim2d.cavity.Cavities.plot_compare_eigenmode", false]], "plot_compare_fm_bar() (cavsim2d.cavity.cavities method)": [[0, "cavsim2d.cavity.Cavities.plot_compare_fm_bar", false]], "plot_compare_fm_scatter() (cavsim2d.cavity.cavities method)": [[0, "cavsim2d.cavity.Cavities.plot_compare_fm_scatter", false]], "plot_compare_hom_bar() (cavsim2d.cavity.cavities method)": [[0, "cavsim2d.cavity.Cavities.plot_compare_hom_bar", false]], "plot_compare_hom_scatter() (cavsim2d.cavity.cavities method)": [[0, "cavsim2d.cavity.Cavities.plot_compare_hom_scatter", false]], "plot_compare_power_scatter() (cavsim2d.cavity.cavities method)": [[0, "cavsim2d.cavity.Cavities.plot_compare_power_scatter", false]], "plot_compare_wakefield() (cavsim2d.cavity.cavities method)": [[0, "cavsim2d.cavity.Cavities.plot_compare_wakefield", false]], "plot_cutoff() (cavsim2d.cavity.cavities method)": [[0, "cavsim2d.cavity.Cavities.plot_cutoff", false]], "plot_dispersion() (cavsim2d.cavity.cavities method)": [[0, "cavsim2d.cavity.Cavities.plot_dispersion", false]], "plot_fields() (cavsim2d.cavity.cavity method)": [[0, "cavsim2d.cavity.Cavity.plot_fields", false]], "plot_fields() (cavsim2d.solvers.ngsolve.eigen_ngsolve.ngsolvemevp method)": [[8, "cavsim2d.solvers.NGSolve.eigen_ngsolve.NGSolveMEVP.plot_fields", false]], "plot_from_json() (cavsim2d.cavity.cavities method)": [[0, "cavsim2d.cavity.Cavities.plot_from_json", false]], "plot_mesh() (cavsim2d.cavity.cavity method)": [[0, "cavsim2d.cavity.Cavity.plot_mesh", false]], "plot_mesh() (cavsim2d.solvers.ngsolve.eigen_ngsolve.ngsolvemevp method)": [[8, "cavsim2d.solvers.NGSolve.eigen_ngsolve.NGSolveMEVP.plot_mesh", false]], "plot_multipac_triplot() (cavsim2d.cavity.cavities method)": [[0, "cavsim2d.cavity.Cavities.plot_multipac_triplot", false]], "plot_pareto() (cavsim2d.cavity.optimisation method)": [[0, "cavsim2d.cavity.Optimisation.plot_pareto", false]], "plot_pareto_surface() (cavsim2d.cavity.optimisation method)": [[0, "cavsim2d.cavity.Optimisation.plot_pareto_surface", false]], "plot_pillbox_geometry() (in module cavsim2d.utils.shared_functions)": [[9, "cavsim2d.utils.shared_functions.plot_pillbox_geometry", false]], "plot_power_comparison() (cavsim2d.cavity.cavities method)": [[0, "cavsim2d.cavity.Cavities.plot_power_comparison", false]], "plot_surface_fields() (cavsim2d.cavity.cavities method)": [[0, "cavsim2d.cavity.Cavities.plot_surface_fields", false]], "plot_thresholds() (cavsim2d.cavity.cavities method)": [[0, "cavsim2d.cavity.Cavities.plot_thresholds", false]], "plot_uq_geometries() (cavsim2d.cavity.cavities method)": [[0, "cavsim2d.cavity.Cavities.plot_uq_geometries", false]], "print_() (in module cavsim2d.analysis.tune.pytuner)": [[2, "cavsim2d.analysis.tune.pyTuner.print_", false]], "process_constraints() (cavsim2d.cavity.optimisation method)": [[0, "cavsim2d.cavity.Optimisation.process_constraints", false]], "process_interval() (cavsim2d.data_module.abci_data.abcidataextraction static method)": [[6, "cavsim2d.data_module.abci_data.ABCIDataExtraction.process_interval", false]], "process_interval() (in module cavsim2d.cavity)": [[0, "cavsim2d.cavity.process_interval", false]], "process_objectives() (in module cavsim2d.cavity)": [[0, "cavsim2d.cavity.process_objectives", false]], "proof_filename() (cavsim2d.cavity.optimisation static method)": [[0, "cavsim2d.cavity.Optimisation.proof_filename", false]], "pytunengsolve (class in cavsim2d.analysis.tune.pytuner)": [[2, "cavsim2d.analysis.tune.pyTuner.PyTuneNGSolve", false]], "qois_all() (cavsim2d.cavity.cavities method)": [[0, "cavsim2d.cavity.Cavities.qois_all", false]], "qois_fm() (cavsim2d.cavity.cavities method)": [[0, "cavsim2d.cavity.Cavities.qois_fm", false]], "qois_hom() (cavsim2d.cavity.cavities method)": [[0, "cavsim2d.cavity.Cavities.qois_hom", false]], "quad_stroud3() (cavsim2d.cavity.optimisation method)": [[0, "cavsim2d.cavity.Optimisation.quad_stroud3", false]], "quad_stroud3() (in module cavsim2d.utils.shared_functions)": [[9, "cavsim2d.utils.shared_functions.quad_stroud3", false]], "r8_mop() (in module cavsim2d.utils.shared_functions)": [[9, "cavsim2d.utils.shared_functions.r8_mop", false]], "recursive_save() (cavsim2d.cavity.optimisation method)": [[0, "cavsim2d.cavity.Optimisation.recursive_save", false]], "remove_cavity() (cavsim2d.cavity.cavities method)": [[0, "cavsim2d.cavity.Cavities.remove_cavity", false]], "remove_duplicate_values() (cavsim2d.cavity.optimisation static method)": [[0, "cavsim2d.cavity.Optimisation.remove_duplicate_values", false]], "reorder_legend() (in module cavsim2d.utils.shared_functions)": [[9, "cavsim2d.utils.shared_functions.reorder_legend", false]], "responses() (cavsim2d.analysis.uq.dakota_scripts.write_dakota_input.dakota method)": [[4, "cavsim2d.analysis.uq.dakota_scripts.write_dakota_input.Dakota.responses", false]], "responses() (cavsim2d.cavity.dakota method)": [[0, "cavsim2d.cavity.Dakota.responses", false]], "rfgun (class in cavsim2d.cavity)": [[0, "cavsim2d.cavity.RFGun", false]], "run_abci() (cavsim2d.cavity.cavities method)": [[0, "cavsim2d.cavity.Cavities.run_abci", false]], "run_analysis() (cavsim2d.analysis.uq.dakota_scripts.write_dakota_input.dakota method)": [[4, "cavsim2d.analysis.uq.dakota_scripts.write_dakota_input.Dakota.run_analysis", false]], "run_analysis() (cavsim2d.cavity.dakota method)": [[0, "cavsim2d.cavity.Dakota.run_analysis", false]], "run_eigenmode() (cavsim2d.cavity.cavities method)": [[0, "cavsim2d.cavity.Cavities.run_eigenmode", false]], "run_eigenmode() (cavsim2d.cavity.cavity method)": [[0, "cavsim2d.cavity.Cavity.run_eigenmode", false]], "run_eigenmode() (cavsim2d.cavity.pillbox method)": [[0, "cavsim2d.cavity.Pillbox.run_eigenmode", false]], "run_eigenmode_parallel() (in module cavsim2d.cavity)": [[0, "cavsim2d.cavity.run_eigenmode_parallel", false]], "run_eigenmode_s() (in module cavsim2d.cavity)": [[0, "cavsim2d.cavity.run_eigenmode_s", false]], "run_multipacting() (cavsim2d.cavity.cavities method)": [[0, "cavsim2d.cavity.Cavities.run_multipacting", false]], "run_optimisation() (cavsim2d.cavity.cavities method)": [[0, "cavsim2d.cavity.Cavities.run_optimisation", false]], "run_tune() (cavsim2d.cavity.cavities method)": [[0, "cavsim2d.cavity.Cavities.run_tune", false]], "run_tune() (cavsim2d.cavity.pillbox method)": [[0, "cavsim2d.cavity.Pillbox.run_tune", false]], "run_tune_ngsolve() (cavsim2d.cavity.pillbox static method)": [[0, "cavsim2d.cavity.Pillbox.run_tune_ngsolve", false]], "run_tune_opt() (cavsim2d.cavity.optimisation method)": [[0, "cavsim2d.cavity.Optimisation.run_tune_opt", false]], "run_tune_parallel() (in module cavsim2d.cavity)": [[0, "cavsim2d.cavity.run_tune_parallel", false]], "run_tune_s() (in module cavsim2d.cavity)": [[0, "cavsim2d.cavity.run_tune_s", false]], "run_tune_uq() (in module cavsim2d.analysis.tune.pytuner)": [[2, "cavsim2d.analysis.tune.pyTuner.run_tune_uq", false]], "run_uq() (cavsim2d.cavity.optimisation method)": [[0, "cavsim2d.cavity.Optimisation.run_uq", false]], "run_wakefield() (cavsim2d.cavity.cavities method)": [[0, "cavsim2d.cavity.Cavities.run_wakefield", false]], "run_wakefield() (cavsim2d.cavity.cavity method)": [[0, "cavsim2d.cavity.Cavity.run_wakefield", false]], "run_wakefield() (cavsim2d.cavity.pillbox method)": [[0, "cavsim2d.cavity.Pillbox.run_wakefield", false]], "run_wakefield_opt() (cavsim2d.cavity.optimisation method)": [[0, "cavsim2d.cavity.Optimisation.run_wakefield_opt", false]], "run_wakefield_parallel() (in module cavsim2d.cavity)": [[0, "cavsim2d.cavity.run_wakefield_parallel", false]], "run_wakefield_s() (in module cavsim2d.cavity)": [[0, "cavsim2d.cavity.run_wakefield_s", false]], "rz_conjug() (cavsim2d.analysis.wakefield.abci_code.abci method)": [[5, "cavsim2d.analysis.wakefield.abci_code.ABCI.rz_conjug", false]], "rz_conjug() (cavsim2d.analysis.wakefield.abci_code.abci_flattop method)": [[5, "cavsim2d.analysis.wakefield.abci_code.ABCI_flattop.rz_conjug", false]], "save() (cavsim2d.cavity.cavities method)": [[0, "cavsim2d.cavity.Cavities.save", false]], "save_all_plots() (cavsim2d.cavity.cavities method)": [[0, "cavsim2d.cavity.Cavities.save_all_plots", false]], "save_fields() (cavsim2d.solvers.ngsolve.eigen_ngsolve.ngsolvemevp static method)": [[8, "cavsim2d.solvers.NGSolve.eigen_ngsolve.NGSolveMEVP.save_fields", false]], "save_mesh() (cavsim2d.solvers.ngsolve.eigen_ngsolve.ngsolvemevp static method)": [[8, "cavsim2d.solvers.NGSolve.eigen_ngsolve.NGSolveMEVP.save_mesh", false]], "save_plot_as_json() (cavsim2d.cavity.cavities method)": [[0, "cavsim2d.cavity.Cavities.save_plot_as_json", false]], "save_shape_space() (cavsim2d.cavity.cavity method)": [[0, "cavsim2d.cavity.Cavity.save_shape_space", false]], "save_tune_result() (in module cavsim2d.utils.shared_functions)": [[9, "cavsim2d.utils.shared_functions.save_tune_result", false]], "set_beampipe() (cavsim2d.cavity.cavity method)": [[0, "cavsim2d.cavity.Cavity.set_beampipe", false]], "set_boundary_conditions() (cavsim2d.cavity.cavity method)": [[0, "cavsim2d.cavity.Cavity.set_boundary_conditions", false]], "set_cavities_field() (cavsim2d.cavity.cavities method)": [[0, "cavsim2d.cavity.Cavities.set_cavities_field", false]], "set_color() (cavsim2d.cavity.cavity method)": [[0, "cavsim2d.cavity.Cavity.set_color", false]], "set_end_cell_left() (cavsim2d.cavity.cavity method)": [[0, "cavsim2d.cavity.Cavity.set_end_cell_left", false]], "set_end_cell_right() (cavsim2d.cavity.cavity method)": [[0, "cavsim2d.cavity.Cavity.set_end_cell_right", false]], "set_geom_parameters() (cavsim2d.analysis.wakefield.geometry.geometry method)": [[5, "cavsim2d.analysis.wakefield.geometry.Geometry.set_geom_parameters", false]], "set_geom_parameters_flattop() (cavsim2d.analysis.wakefield.geometry.geometry method)": [[5, "cavsim2d.analysis.wakefield.geometry.Geometry.set_geom_parameters_flattop", false]], "set_mid_cell() (cavsim2d.cavity.cavity method)": [[0, "cavsim2d.cavity.Cavity.set_mid_cell", false]], "set_n_cells() (cavsim2d.cavity.cavity method)": [[0, "cavsim2d.cavity.Cavity.set_n_cells", false]], "set_name() (cavsim2d.cavity.cavities method)": [[0, "cavsim2d.cavity.Cavities.set_name", false]], "set_name() (cavsim2d.cavity.cavity method)": [[0, "cavsim2d.cavity.Cavity.set_name", false]], "set_parameterisation() (cavsim2d.cavity.cavity method)": [[0, "cavsim2d.cavity.Cavity.set_parameterisation", false]], "set_plot_label() (cavsim2d.cavity.cavity method)": [[0, "cavsim2d.cavity.Cavity.set_plot_label", false]], "set_wall_material() (cavsim2d.cavity.cavity method)": [[0, "cavsim2d.cavity.Cavity.set_wall_material", false]], "shortest_direction() (in module cavsim2d.utils.shared_functions)": [[9, "cavsim2d.utils.shared_functions.shortest_direction", false]], "show_valid_operating_point_structure() (in module cavsim2d.cavity)": [[0, "cavsim2d.cavity.show_valid_operating_point_structure", false]], "show_welcome() (in module cavsim2d.cavity)": [[0, "cavsim2d.cavity.show_welcome", false]], "start_optimisation() (cavsim2d.cavity.optimisation method)": [[0, "cavsim2d.cavity.Optimisation.start_optimisation", false]], "stroud() (cavsim2d.cavity.optimisation static method)": [[0, "cavsim2d.cavity.Optimisation.stroud", false]], "stroud() (in module cavsim2d.utils.shared_functions)": [[9, "cavsim2d.utils.shared_functions.stroud", false]], "study_convergence() (cavsim2d.cavity.cavity method)": [[0, "cavsim2d.cavity.Cavity.study_convergence", false]], "sweep() (cavsim2d.cavity.cavities method)": [[0, "cavsim2d.cavity.Cavities.sweep", false]], "sweep() (cavsim2d.cavity.cavity method)": [[0, "cavsim2d.cavity.Cavity.sweep", false]], "tangent_coords() (in module cavsim2d.utils.shared_functions)": [[9, "cavsim2d.utils.shared_functions.tangent_coords", false]], "to_multicell() (cavsim2d.cavity.cavity method)": [[0, "cavsim2d.cavity.Cavity.to_multicell", false]], "to_multicell() (in module cavsim2d.utils.shared_functions)": [[9, "cavsim2d.utils.shared_functions.to_multicell", false]], "tune() (cavsim2d.analysis.tune.pytuner.pytunengsolve method)": [[2, "cavsim2d.analysis.tune.pyTuner.PyTuneNGSolve.tune", false]], "tune_flattop() (cavsim2d.analysis.tune.pytuner.pytunengsolve method)": [[2, "cavsim2d.analysis.tune.pyTuner.PyTuneNGSolve.tune_flattop", false]], "tune_ngsolve() (cavsim2d.analysis.tune.tuner.tuner method)": [[2, "cavsim2d.analysis.tune.tuner.Tuner.tune_ngsolve", false]], "tuner (class in cavsim2d.analysis.tune.tuner)": [[2, "cavsim2d.analysis.tune.tuner.Tuner", false]], "update_alpha() (in module cavsim2d.utils.shared_functions)": [[9, "cavsim2d.utils.shared_functions.update_alpha", false]], "uq() (in module cavsim2d.cavity)": [[0, "cavsim2d.cavity.uq", false]], "uq_multicell_s() (in module cavsim2d.cavity)": [[0, "cavsim2d.cavity.uq_multicell_s", false]], "uq_parallel() (in module cavsim2d.cavity)": [[0, "cavsim2d.cavity.uq_parallel", false]], "uq_parallel_multicell() (in module cavsim2d.cavity)": [[0, "cavsim2d.cavity.uq_parallel_multicell", false]], "uq_parallel_tuner() (in module cavsim2d.analysis.tune.pytuner)": [[2, "cavsim2d.analysis.tune.pyTuner.uq_parallel_tuner", false]], "uq_tuner() (in module cavsim2d.analysis.tune.pytuner)": [[2, "cavsim2d.analysis.tune.pyTuner.uq_tuner", false]], "variables() (cavsim2d.analysis.uq.dakota_scripts.write_dakota_input.dakota method)": [[4, "cavsim2d.analysis.uq.dakota_scripts.write_dakota_input.Dakota.variables", false]], "variables() (cavsim2d.cavity.dakota method)": [[0, "cavsim2d.cavity.Dakota.variables", false]], "vhf_gun() (cavsim2d.solvers.ngsolve.eigen_ngsolve.ngsolvemevp method)": [[8, "cavsim2d.solvers.NGSolve.eigen_ngsolve.NGSolveMEVP.vhf_gun", false]], "weighted_mean_obj() (cavsim2d.cavity.optimisation method)": [[0, "cavsim2d.cavity.Optimisation.weighted_mean_obj", false]], "weighted_mean_obj() (in module cavsim2d.utils.shared_functions)": [[9, "cavsim2d.utils.shared_functions.weighted_mean_obj", false]], "write_cavity_geometry_cli() (in module cavsim2d.utils.shared_functions)": [[9, "cavsim2d.utils.shared_functions.write_cavity_geometry_cli", false]], "write_cavity_geometry_cli_flattop() (in module cavsim2d.utils.shared_functions)": [[9, "cavsim2d.utils.shared_functions.write_cavity_geometry_cli_flattop", false]], "write_cst_paramters() (in module cavsim2d.utils.shared_functions)": [[9, "cavsim2d.utils.shared_functions.write_cst_paramters", false]], "write_geometry() (cavsim2d.solvers.ngsolve.eigen_ngsolve.ngsolvemevp method)": [[8, "cavsim2d.solvers.NGSolve.eigen_ngsolve.NGSolveMEVP.write_geometry", false]], "write_geometry_multicell() (cavsim2d.solvers.ngsolve.eigen_ngsolve.ngsolvemevp method)": [[8, "cavsim2d.solvers.NGSolve.eigen_ngsolve.NGSolveMEVP.write_geometry_multicell", false]], "write_gun_geometry() (in module cavsim2d.utils.shared_functions)": [[9, "cavsim2d.utils.shared_functions.write_gun_geometry", false]], "write_input_file() (cavsim2d.analysis.uq.dakota_scripts.write_dakota_input.dakota method)": [[4, "cavsim2d.analysis.uq.dakota_scripts.write_dakota_input.Dakota.write_input_file", false]], "write_input_file() (cavsim2d.cavity.dakota method)": [[0, "cavsim2d.cavity.Dakota.write_input_file", false]], "write_output() (cavsim2d.analysis.tune.pytuner.pytunengsolve static method)": [[2, "cavsim2d.analysis.tune.pyTuner.PyTuneNGSolve.write_output", false]], "write_pillbox_geometry() (in module cavsim2d.utils.shared_functions)": [[9, "cavsim2d.utils.shared_functions.write_pillbox_geometry", false]], "writecavityformultipac() (in module cavsim2d.utils.shared_functions)": [[9, "cavsim2d.utils.shared_functions.writeCavityForMultipac", false]], "writecavityformultipac_multicell() (in module cavsim2d.utils.shared_functions)": [[9, "cavsim2d.utils.shared_functions.writeCavityForMultipac_multicell", false]]}, "objects": {"": [[0, 0, 0, "-", "cavsim2d"]], "cavsim2d": [[1, 0, 0, "-", "analysis"], [0, 0, 0, "-", "cavity"], [6, 0, 0, "-", "data_module"], [7, 0, 0, "-", "solvers"], [9, 0, 0, "-", "utils"]], "cavsim2d.analysis": [[2, 0, 0, "-", "tune"], [3, 0, 0, "-", "uq"], [5, 0, 0, "-", "wakefield"]], "cavsim2d.analysis.tune": [[2, 0, 0, "-", "pyTuner"], [2, 0, 0, "-", "tuner"]], "cavsim2d.analysis.tune.pyTuner": [[2, 1, 1, "", "PyTuneNGSolve"], [2, 3, 1, "", "print_"], [2, 3, 1, "", "run_tune_uq"], [2, 3, 1, "", "uq_parallel_tuner"], [2, 3, 1, "", "uq_tuner"]], "cavsim2d.analysis.tune.pyTuner.PyTuneNGSolve": [[2, 2, 1, "", "all_equal"], [2, 2, 1, "", "tune"], [2, 2, 1, "", "tune_flattop"], [2, 2, 1, "", "write_output"]], "cavsim2d.analysis.tune.tuner": [[2, 1, 1, "", "Tuner"]], "cavsim2d.analysis.tune.tuner.Tuner": [[2, 2, 1, "", "tune_ngsolve"]], "cavsim2d.analysis.uq": [[4, 0, 0, "-", "dakota_scripts"]], "cavsim2d.analysis.uq.dakota_scripts": [[4, 0, 0, "-", "write_dakota_input"]], "cavsim2d.analysis.uq.dakota_scripts.write_dakota_input": [[4, 1, 1, "", "Dakota"]], "cavsim2d.analysis.uq.dakota_scripts.write_dakota_input.Dakota": [[4, 2, 1, "", "environment"], [4, 2, 1, "", "interface"], [4, 2, 1, "", "method"], [4, 2, 1, "", "responses"], [4, 2, 1, "", "run_analysis"], [4, 2, 1, "", "variables"], [4, 2, 1, "", "write_input_file"]], "cavsim2d.analysis.wakefield": [[5, 0, 0, "-", "abci_code"], [5, 0, 0, "-", "abci_geometry"], [5, 0, 0, "-", "geometry"]], "cavsim2d.analysis.wakefield.abci_code": [[5, 1, 1, "", "ABCI"], [5, 1, 1, "", "ABCI_flattop"]], "cavsim2d.analysis.wakefield.abci_code.ABCI": [[5, 2, 1, "", "abci_M"], [5, 2, 1, "", "abci_bp_L"], [5, 2, 1, "", "abci_bp_R"], [5, 2, 1, "", "abci_n1_L"], [5, 2, 1, "", "abci_n1_R"], [5, 2, 1, "", "rz_conjug"]], "cavsim2d.analysis.wakefield.abci_code.ABCI_flattop": [[5, 2, 1, "", "abci_M"], [5, 2, 1, "", "abci_bp_L"], [5, 2, 1, "", "abci_bp_R"], [5, 2, 1, "", "abci_n1_L"], [5, 2, 1, "", "abci_n1_R"], [5, 2, 1, "", "rz_conjug"]], "cavsim2d.analysis.wakefield.abci_geometry": [[5, 1, 1, "", "ABCIGeometry"]], "cavsim2d.analysis.wakefield.abci_geometry.ABCIGeometry": [[5, 2, 1, "", "cavity"], [5, 2, 1, "", "cavity_flattop"], [5, 2, 1, "", "createFolder"]], "cavsim2d.analysis.wakefield.geometry": [[5, 1, 1, "", "Geometry"]], "cavsim2d.analysis.wakefield.geometry.Geometry": [[5, 2, 1, "", "set_geom_parameters"], [5, 2, 1, "", "set_geom_parameters_flattop"]], "cavsim2d.cavity": [[0, 1, 1, "", "Cavities"], [0, 1, 1, "", "Cavity"], [0, 1, 1, "", "Dakota"], [0, 1, 1, "", "OperationPoints"], [0, 1, 1, "", "Optimisation"], [0, 1, 1, "", "Pillbox"], [0, 1, 1, "", "RFGun"], [0, 3, 1, "", "add_text"], [0, 3, 1, "", "axis_data_coords_sys_transform"], [0, 3, 1, "", "get_qois_value"], [0, 3, 1, "", "get_surface_resistance"], [0, 3, 1, "", "get_wakefield_objectives_value"], [0, 3, 1, "", "process_interval"], [0, 3, 1, "", "process_objectives"], [0, 3, 1, "", "run_eigenmode_parallel"], [0, 3, 1, "", "run_eigenmode_s"], [0, 3, 1, "", "run_tune_parallel"], [0, 3, 1, "", "run_tune_s"], [0, 3, 1, "", "run_wakefield_parallel"], [0, 3, 1, "", "run_wakefield_s"], [0, 3, 1, "", "show_valid_operating_point_structure"], [0, 3, 1, "", "show_welcome"], [0, 3, 1, "", "uq"], [0, 3, 1, "", "uq_multicell_s"], [0, 3, 1, "", "uq_parallel"], [0, 3, 1, "", "uq_parallel_multicell"]], "cavsim2d.cavity.Cavities": [[0, 2, 1, "", "add_cavity"], [0, 2, 1, "", "arcTo"], [0, 2, 1, "", "arcTo2"], [0, 2, 1, "", "calc_cutoff"], [0, 2, 1, "", "calc_limits"], [0, 2, 1, "", "calculate_beampipe_cutoff"], [0, 2, 1, "", "check_uq_config"], [0, 2, 1, "", "compare_power"], [0, 2, 1, "", "define_operating_points"], [0, 2, 1, "", "find_folders_with_tag"], [0, 2, 1, "", "get_eigenmode_qois"], [0, 2, 1, "", "get_power_qois"], [0, 2, 1, "", "get_tune_res"], [0, 2, 1, "", "get_wakefield_qois"], [0, 2, 1, "", "lineTo"], [0, 2, 1, "", "linspace"], [0, 2, 1, "", "load_plot_from_json"], [0, 2, 1, "", "make_excel_summary"], [0, 2, 1, "", "make_latex_summary_tables"], [0, 2, 1, "", "plot"], [0, 2, 1, "", "plot_axis_fields"], [0, 2, 1, "", "plot_cavities_contour"], [0, 2, 1, "", "plot_cavities_contour_dimension"], [0, 2, 1, "", "plot_compare_all_bar"], [0, 2, 1, "", "plot_compare_all_scatter"], [0, 2, 1, "", "plot_compare_bar"], [0, 2, 1, "", "plot_compare_eigenmode"], [0, 2, 1, "", "plot_compare_fm_bar"], [0, 2, 1, "", "plot_compare_fm_scatter"], [0, 2, 1, "", "plot_compare_hom_bar"], [0, 2, 1, "", "plot_compare_hom_scatter"], [0, 2, 1, "", "plot_compare_power_scatter"], [0, 2, 1, "", "plot_compare_wakefield"], [0, 2, 1, "", "plot_cutoff"], [0, 2, 1, "", "plot_dispersion"], [0, 2, 1, "", "plot_from_json"], [0, 2, 1, "", "plot_multipac_triplot"], [0, 2, 1, "", "plot_power_comparison"], [0, 2, 1, "", "plot_surface_fields"], [0, 2, 1, "", "plot_thresholds"], [0, 2, 1, "", "plot_uq_geometries"], [0, 2, 1, "", "qois_all"], [0, 2, 1, "", "qois_fm"], [0, 2, 1, "", "qois_hom"], [0, 2, 1, "", "remove_cavity"], [0, 2, 1, "", "run_abci"], [0, 2, 1, "", "run_eigenmode"], [0, 2, 1, "", "run_multipacting"], [0, 2, 1, "", "run_optimisation"], [0, 2, 1, "", "run_tune"], [0, 2, 1, "", "run_wakefield"], [0, 2, 1, "", "save"], [0, 2, 1, "", "save_all_plots"], [0, 2, 1, "", "save_plot_as_json"], [0, 2, 1, "", "set_cavities_field"], [0, 2, 1, "", "set_name"], [0, 2, 1, "", "sweep"]], "cavsim2d.cavity.Cavity": [[0, 2, 1, "", "calc_op_freq"], [0, 2, 1, "", "define_operating_points"], [0, 2, 1, "", "get_abci_data"], [0, 2, 1, "", "get_eigenmode_qois"], [0, 2, 1, "", "get_ngsolve_tune_res"], [0, 2, 1, "", "get_power"], [0, 2, 1, "", "get_power_uq"], [0, 2, 1, "", "get_uq_fm_results"], [0, 2, 1, "", "get_uq_hom_results"], [0, 2, 1, "", "get_uq_post"], [0, 2, 1, "", "get_wakefield_qois"], [0, 2, 1, "", "inspect"], [0, 2, 1, "", "load"], [0, 2, 1, "", "load_shape_space"], [0, 2, 1, "", "plot"], [0, 2, 1, "", "plot_animate_wakefield"], [0, 2, 1, "", "plot_fields"], [0, 2, 1, "", "plot_mesh"], [0, 2, 1, "", "run_eigenmode"], [0, 2, 1, "", "run_wakefield"], [0, 2, 1, "", "save_shape_space"], [0, 2, 1, "", "set_beampipe"], [0, 2, 1, "", "set_boundary_conditions"], [0, 2, 1, "", "set_color"], [0, 2, 1, "", "set_end_cell_left"], [0, 2, 1, "", "set_end_cell_right"], [0, 2, 1, "", "set_mid_cell"], [0, 2, 1, "", "set_n_cells"], [0, 2, 1, "", "set_name"], [0, 2, 1, "", "set_parameterisation"], [0, 2, 1, "", "set_plot_label"], [0, 2, 1, "", "set_wall_material"], [0, 2, 1, "", "study_convergence"], [0, 2, 1, "", "sweep"], [0, 2, 1, "", "to_multicell"]], "cavsim2d.cavity.Cavity.cav": [[0, 3, 1, "", "run_tune"]], "cavsim2d.cavity.Dakota": [[0, 2, 1, "", "environment"], [0, 2, 1, "", "interface"], [0, 2, 1, "", "method"], [0, 2, 1, "", "nodes_to_cst_sweep_input"], [0, 2, 1, "", "responses"], [0, 2, 1, "", "run_analysis"], [0, 2, 1, "", "variables"], [0, 2, 1, "", "write_input_file"]], "cavsim2d.cavity.OperationPoints": [[0, 2, 1, "", "get_default_operating_points"], [0, 2, 1, "", "load_operating_point"]], "cavsim2d.cavity.Optimisation": [[0, 2, 1, "", "calculate_hypervolumes"], [0, 2, 1, "", "chaos"], [0, 2, 1, "", "color_pareto"], [0, 2, 1, "", "copyFiles"], [0, 2, 1, "", "crossover"], [0, 2, 1, "", "ea"], [0, 2, 1, "", "generate_first_men"], [0, 2, 1, "", "mutation"], [0, 2, 1, "", "negate_list"], [0, 2, 1, "", "overwriteFolder"], [0, 2, 1, "", "pareto_front"], [0, 2, 1, "", "pareto_front_"], [0, 2, 1, "", "plot_pareto"], [0, 2, 1, "", "plot_pareto_surface"], [0, 2, 1, "", "process_constraints"], [0, 2, 1, "", "proof_filename"], [0, 2, 1, "", "quad_stroud3"], [0, 2, 1, "", "recursive_save"], [0, 2, 1, "", "remove_duplicate_values"], [0, 2, 1, "", "run_tune_opt"], [0, 2, 1, "", "run_uq"], [0, 2, 1, "", "run_wakefield_opt"], [0, 2, 1, "", "start_optimisation"], [0, 2, 1, "", "stroud"], [0, 2, 1, "", "weighted_mean_obj"]], "cavsim2d.cavity.Pillbox": [[0, 2, 1, "", "plot"], [0, 2, 1, "", "run_eigenmode"], [0, 2, 1, "", "run_tune"], [0, 2, 1, "", "run_tune_ngsolve"], [0, 2, 1, "", "run_wakefield"]], "cavsim2d.cavity.RFGun": [[0, 2, 1, "", "plot"]], "cavsim2d.data_module": [[6, 0, 0, "-", "abci_data"]], "cavsim2d.data_module.abci_data": [[6, 1, 1, "", "ABCIData"], [6, 1, 1, "", "ABCIDataExtraction"]], "cavsim2d.data_module.abci_data.ABCIData": [[6, 2, 1, "", "checks"], [6, 2, 1, "", "get_data"], [6, 2, 1, "", "get_peaks"], [6, 2, 1, "", "plot_bands"]], "cavsim2d.data_module.abci_data.ABCIDataExtraction": [[6, 2, 1, "", "excel_reader"], [6, 2, 1, "", "join_excel"], [6, 2, 1, "", "multiple_folders_data"], [6, 2, 1, "", "multiple_folders_data_parallel"], [6, 2, 1, "", "process_interval"]], "cavsim2d.solvers": [[8, 0, 0, "-", "NGSolve"]], "cavsim2d.solvers.NGSolve": [[8, 0, 0, "-", "eigen_ngsolve"]], "cavsim2d.solvers.NGSolve.eigen_ngsolve": [[8, 1, 1, "", "NGSolveMEVP"]], "cavsim2d.solvers.NGSolve.eigen_ngsolve.NGSolveMEVP": [[8, 2, 1, "", "cavgeom_ngsolve"], [8, 2, 1, "", "cavity"], [8, 2, 1, "", "cavity_flattop"], [8, 2, 1, "", "cavity_multicell"], [8, 2, 1, "", "createFolder"], [8, 2, 1, "", "eigen3d"], [8, 2, 1, "", "ell_ips_grads"], [8, 2, 1, "", "evaluate_qois"], [8, 2, 1, "", "gauss"], [8, 2, 1, "", "gaussian_deform"], [8, 2, 1, "", "geometry_from_array"], [8, 2, 1, "", "geometry_from_file"], [8, 2, 1, "", "load_fields"], [8, 2, 1, "", "load_mesh"], [8, 2, 1, "", "pillbox"], [8, 2, 1, "", "plot_fields"], [8, 2, 1, "", "plot_mesh"], [8, 2, 1, "", "save_fields"], [8, 2, 1, "", "save_mesh"], [8, 2, 1, "", "vhf_gun"], [8, 2, 1, "", "write_geometry"], [8, 2, 1, "", "write_geometry_multicell"]], "cavsim2d.utils": [[9, 0, 0, "-", "shared_functions"]], "cavsim2d.utils.shared_functions": [[9, 3, 1, "", "arcTo"], [9, 3, 1, "", "arcToTheta"], [9, 3, 1, "", "area_pareto_fronts"], [9, 3, 1, "", "c1_leg_monomial_integral"], [9, 3, 1, "", "calculate_alpha"], [9, 3, 1, "", "calculate_bounded_area"], [9, 3, 1, "", "cn_gauss"], [9, 3, 1, "", "cn_leg_03_1"], [9, 3, 1, "", "cn_leg_03_xiu"], [9, 3, 1, "", "cn_leg_05_1"], [9, 3, 1, "", "cn_leg_05_2"], [9, 3, 1, "", "ellipse_tangent"], [9, 3, 1, "", "enforce_Req_continuity"], [9, 3, 1, "", "extend_pareto"], [9, 3, 1, "", "f2b_slashes"], [9, 3, 1, "", "find_all_intersections"], [9, 3, 1, "", "get_qoi_value"], [9, 3, 1, "", "get_wakefield_data"], [9, 3, 1, "", "interpolate_pareto"], [9, 3, 1, "", "jac"], [9, 3, 1, "", "lineTo"], [9, 3, 1, "", "line_intersection"], [9, 3, 1, "", "linspace"], [9, 3, 1, "", "normal_dist"], [9, 3, 1, "", "plot_pillbox_geometry"], [9, 3, 1, "", "quad_stroud3"], [9, 3, 1, "", "r8_mop"], [9, 3, 1, "", "reorder_legend"], [9, 3, 1, "", "save_tune_result"], [9, 3, 1, "", "shortest_direction"], [9, 3, 1, "", "stroud"], [9, 3, 1, "", "tangent_coords"], [9, 3, 1, "", "to_multicell"], [9, 3, 1, "", "update_alpha"], [9, 3, 1, "", "weighted_mean_obj"], [9, 3, 1, "", "writeCavityForMultipac"], [9, 3, 1, "", "writeCavityForMultipac_multicell"], [9, 3, 1, "", "write_cavity_geometry_cli"], [9, 3, 1, "", "write_cavity_geometry_cli_flattop"], [9, 3, 1, "", "write_cst_paramters"], [9, 3, 1, "", "write_gun_geometry"], [9, 3, 1, "", "write_pillbox_geometry"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function"}, "terms": {"": [0, 5, 8, 9, 13], "0": [0, 2, 5, 8, 9, 13], "0003011": 13, "0007857768796": 13, "001": 9, "0370": [0, 13], "05": [0, 13], "07": [0, 13], "08": 13, "1": [0, 2, 4, 5, 8, 9, 13], "10": [0, 9, 13], "100": 13, "1000": 0, "10000": [0, 13], "103": 13, "11": 8, "110": 13, "12": [0, 13], "1280": [0, 13], "13": 13, "1300": [0, 13], "14": 0, "15": [0, 13], "170": 13, "19": 13, "1e": [0, 13], "1e11": [0, 13], "2": [0, 2, 8, 9, 13], "20": 13, "25": [0, 13], "27": 13, "27068613930538": 13, "2b": 9, "2d": 13, "3": [0, 2, 5, 8, 9, 13], "30": 13, "32": [0, 13], "32mm": 13, "33": [0, 2, 8, 13], "34": 13, "35": 13, "353": 13, "354": [0, 13], "36": 13, "3702896505612": 13, "39": 13, "4": [0, 2, 5, 8, 13], "40": 13, "400": [0, 13], "42": 13, "429906": 13, "45": [0, 13], "5": [0, 2, 8, 9, 13], "50": [0, 5, 13], "5000": 5, "53": 13, "55": 13, "56": [0, 13], "57": 13, "58": [0, 13], "6": [0, 9, 13], "60": 13, "64": 13, "7": 13, "709": [0, 13], "716": 13, "72": [0, 13], "76": [0, 13], "79": [0, 13], "8": 13, "80": 13, "801": [0, 13], "815": 13, "82": [0, 13], "84": 13, "85": [0, 13], "9": 13, "91": [0, 13], "93": 13, "98": 13, "A": [0, 8, 9, 13], "And": 13, "By": 13, "For": [0, 13], "If": [0, 8, 9, 13], "In": 9, "It": [0, 11, 13], "No": 2, "Or": 13, "The": [0, 5, 9, 11, 13], "These": 13, "To": 13, "_": 13, "_0": 5, "a_el": 8, "a_er": 8, "abci": [0, 1, 5, 11, 13], "abci_bp_l": [1, 5], "abci_bp_r": [1, 5], "abci_cod": [0, 1], "abci_data": [0, 10, 12], "abci_data_dir": [0, 6], "abci_data_fold": 6, "abci_flattop": [1, 5], "abci_geometri": [0, 1], "abci_m": [1, 5], "abci_mp": 13, "abci_mp4_12_5": 13, "abci_mp64": 13, "abci_mp64_12_5": 13, "abci_mp_12_5": 13, "abci_mp_12_5abci_mp_12_5abci_mp": [], "abci_n1_l": [1, 5], "abci_n1_r": [1, 5], "abcidata": [0, 6, 10], "abcidataextract": [0, 6, 10], "abcigeometri": [1, 5], "about": 13, "abov": 13, "acc": [], "acceler": [0, 11, 13], "accur": 0, "accuraci": 9, "achiev": 13, "ad": [9, 13], "add": 0, "add_cav": [0, 10, 12, 13], "add_text": [0, 10, 12], "addit": 13, "advanc": 10, "advis": 0, "after": 8, "again": 13, "algorithm": [11, 13], "all": [0, 8, 9, 11, 13], "all_equ": [1, 2], "allow": 13, "along": 8, "alpha": [5, 8, 9], "alpha_": 8, "alpha_el": 8, "alpha_p": [0, 13], "also": [11, 13], "alwai": 0, "an": [0, 9, 11, 13], "analys": [0, 13], "analysi": [0, 8, 10, 12], "angl": [5, 9], "annot": 0, "append": 13, "appli": 13, "applic": 13, "appropri": 9, "approxim": 13, "ar": [0, 9, 11, 13], "arbitrari": 13, "arc": 9, "arcto": [0, 9, 10, 12], "arcto2": [0, 10, 12], "arctotheta": [0, 9, 10], "area": 9, "area_pareto_front": [0, 9, 10], "arg": [0, 2], "argument": [0, 2, 4, 13], "around": [0, 9], "arrai": [0, 2, 5, 8, 9], "arrowprop": 0, "articl": 13, "associ": 13, "avail": 0, "ax": [0, 9, 13], "ax_list": 0, "axd": 0, "axi": [0, 2, 8, 9, 11, 13], "axis_data_coords_sys_transform": [0, 10, 12], "axis_obj_in": 0, "axissymmetr": 11, "axisymmetr": 13, "azimuth": 11, "b": [0, 8, 9, 13], "b_el": 8, "b_er": 8, "backward": 9, "bar": [0, 13], "base": [0, 2, 4, 5, 6, 8, 9], "basic": 11, "bc": [0, 2, 8, 9, 13], "beam": [0, 5, 8, 9, 11, 13], "beampip": [0, 2, 5, 8, 9, 13], "befor": 13, "being": 9, "belomestnykh": 11, "belong": 13, "below": [5, 11, 13], "beta": [0, 8, 13], "beta_uncertain": [0, 4], "beta_xi": [0, 13], "better": 5, "between": [0, 9], "beyond": 9, "binari": 11, "bit": 13, "bool": [0, 8, 9], "both": [0, 2, 8, 9, 13], "bound": 13, "boundari": [0, 2, 8, 9], "boundary_cond": 0, "boundary_condit": [0, 13], "box": 0, "bp": [0, 9], "bpk": [0, 13], "bremsstrahlung": 0, "broken": 13, "bunch": [0, 11, 13], "bunch_length": [0, 5, 13], "c": 8, "c1_leg_monomial_integr": [0, 9, 10], "cadsim2d": 13, "calc_cutoff": [0, 10, 12], "calc_limit": [0, 10, 12], "calc_op_freq": [0, 10, 12], "calcul": [0, 2, 5, 9, 11, 13], "calculate_alpha": [0, 9, 10], "calculate_beampipe_cutoff": [0, 10, 12], "calculate_bounded_area": [0, 9, 10], "calculate_hypervolum": [0, 10, 12], "call": [0, 9, 11], "can": [0, 2, 9, 11, 13], "capabilit": 13, "capabl": 13, "carlo": 9, "carri": 13, "case": 9, "cav": [0, 10, 12, 13], "cav_geom": 8, "cavgeom_ngsolv": [7, 8], "caviti": [1, 2, 5, 7, 8, 9, 10, 11, 12], "cavities_list": 0, "cavity_flattop": [1, 5, 7, 8], "cavity_multicel": [7, 8], "cavitydesignhub": [], "cavsim2d": 13, "cavsim2d_path": 13, "cb52709f91cc07cfd6e0517e0e6fe49d": 13, "cd": 13, "cell": [0, 2, 5, 8, 9, 13], "cell_complex": [0, 13], "cell_nod": 2, "cell_par": [8, 9], "cell_parameteris": [0, 8, 9], "cell_typ": [0, 2, 9, 13], "center": 9, "cern": 13, "ch": 13, "chang": [0, 5, 13], "chao": [0, 10, 12], "chaos_factor": 13, "chart": 0, "check": [0, 6], "check_input": [], "check_uq_config": [0, 10, 12], "chin": 11, "class": [0, 2, 4, 5, 6, 8], "clone": 13, "close": [], "cn_gauss": [0, 9, 10], "cn_leg": 9, "cn_leg_03_1": [0, 9, 10], "cn_leg_03_xiu": [0, 9, 10], "cn_leg_05_1": [0, 9, 10], "cn_leg_05_2": [0, 9, 10], "code": [0, 10, 11], "color": 0, "color_pareto": [0, 10, 12], "column": [0, 9], "com": 13, "command": [0, 13], "compact": [0, 13], "compar": 13, "compare_pow": [0, 10, 12], "comparison": 13, "complet": 13, "complex": 13, "compon": 13, "compris": 5, "comput": [9, 13], "condit": [0, 2, 8], "conduct": 11, "config": 0, "config_fil": 13, "configur": [0, 10], "confirm": 13, "connect": 9, "consid": [0, 2, 5], "consist": 11, "consoletest": [], "constraint": 0, "contain": [0, 2, 5, 9, 13], "content": [10, 12], "continu": 9, "contour": [0, 2, 8, 9], "control": 13, "converg": 13, "convergence_list": 0, "coord": 9, "coordin": [0, 5, 9], "copi": 13, "copyfil": [0, 10, 12], "core": 13, "correct": 13, "correctli": 9, "correspond": [9, 13], "could": 13, "creat": 13, "createfold": [1, 5, 7, 8], "crossov": [0, 10, 12, 13], "crossover_factor": 13, "cst": 9, "cube": 9, "cup": 5, "current": [0, 11, 13], "curv": 0, "custom": [11, 13], "custom_nam": 13, "cut": 11, "d": [0, 9], "dakota": [0, 3, 4, 10, 12], "dakota_script": [1, 3], "damp": [0, 13], "dark": 13, "data": [0, 9, 13], "data_modul": [0, 10, 12], "datafram": [0, 9], "ddr_sig": [0, 5, 13], "ddz_sig": [0, 5, 13], "default": [0, 8, 13], "defin": [0, 2, 8, 13], "define_operating_point": [0, 10, 12], "definit": 8, "deformation_param": 8, "degener": 13, "degeneraci": 13, "degrad": 9, "degre": [0, 9], "delta": [0, 13], "demonstr": 13, "depend": [9, 13], "describ": [11, 13], "descriptor": [0, 4], "design": [11, 13], "desir": 0, "develop": 0, "deviat": 13, "df": [0, 9], "diagnos": 13, "dict": [0, 2, 9], "dictionari": [0, 2, 9, 10], "differ": [5, 11, 13], "differnt": 11, "dim": 9, "dimens": [0, 2, 5, 9, 13], "dimension": 9, "dip_interv": 6, "dipol": [0, 2], "dirc": 6, "directli": [11, 13], "directori": [0, 2, 8, 9, 13], "disabl": [0, 13], "dispers": 0, "displai": [], "distribut": [0, 4, 13], "dive": 13, "divers": 13, "do": 13, "doe": 13, "domain": [11, 13], "don": 5, "done": [11, 13], "download": 13, "draw": 8, "dropbox": [], "due": 13, "e": [0, 8, 13], "e_acc": 0, "e_mathrm": [], "ea": [0, 10, 12], "eacc": [0, 13], "each": [11, 13], "easi": 13, "easili": 13, "edg": 9, "editor": 11, "effect": 9, "eg": [0, 4], "eigen": 13, "eigen3d": [7, 8], "eigen_ngsolv": [0, 7], "eigenfrequ": 0, "eigenmod": [0, 2, 8, 9, 10], "eigenmode_config": [0, 13], "eigenmode_qo": [], "eigenmode_qoi": 13, "eigenmode_tune_r": 13, "eigenvalu": [8, 13], "either": 0, "electr": [0, 2, 8], "electromagnet": [11, 13], "elektron": 13, "element": 8, "elit": 13, "elites_for_crossov": 13, "ell_ips_grad": [7, 8], "ellips": [5, 9], "ellipse_tang": [0, 9, 10], "ellipt": [5, 13], "en": [0, 2, 8], "enabl": 13, "end": [0, 2, 5, 8, 9, 13], "end_angl": [0, 9], "end_cell_left": [0, 8, 9], "end_cell_right": [0, 8, 9], "end_typ": 5, "endcell_l": 13, "endcell_r": 13, "energi": [0, 13], "enforc": 9, "enforce_req_continu": [0, 9, 10], "ensur": 13, "enter": 13, "entir": 0, "entrant": 13, "entri": [0, 13], "environ": [0, 3, 4, 10, 12], "epk": [0, 13], "equal": [5, 13], "equat": [0, 5, 9, 11, 13], "equip": 13, "error": 13, "error_msg": 9, "et": [0, 2, 8], "evalu": 13, "evaluate_qoi": [7, 8], "ex": [11, 13], "examin": 13, "exampl": [0, 10], "excel_read": [0, 6], "exclud": 13, "execut": 11, "exist": [0, 13], "expans": 8, "expansion_r": 8, "expon": 9, "extend": 9, "extend_pareto": [0, 9, 10], "f": [0, 4, 5, 13], "f2b_slash": [0, 9, 10], "f_1": 9, "f_2": 9, "f_3": 9, "f_4": 9, "f_fm": 0, "f_rev": [0, 13], "f_shift": [0, 2, 8, 13], "factor": [0, 13], "fail": 9, "fals": [0, 4, 6, 8, 9], "ff": [0, 13], "fid": [2, 5, 6, 8], "field": [0, 10], "fig": [0, 13], "figsiz": 0, "figur": [0, 5, 9, 11], "file": [0, 4, 5, 8, 9, 11, 13], "file_path": 9, "filenam": [0, 2, 5, 6, 8, 9, 11], "filepath": [0, 8], "files_path": [0, 13], "fill": 9, "find": 9, "find_all_intersect": [0, 9, 10], "find_folders_with_tag": [0, 10, 12], "first": [11, 13], "float": [0, 2, 5, 8, 9], "fm": 13, "folder": [0, 4, 8, 11, 13], "follow": [11, 13], "form": 11, "format": [5, 13], "forward": 9, "found": [11, 13], "four": 9, "frac": 9, "free": 13, "freq": [0, 13], "freq_f": 8, "freq_list": 2, "freq_shift": 0, "frequenc": [0, 8, 11, 13], "from": [0, 5, 9, 13], "front": 9, "fsolv": 9, "full": 13, "function": [0, 2, 5, 9, 13], "fundament": [0, 13], "further": 13, "futur": 11, "g": [0, 13], "ga": 11, "gauss": [7, 8], "gaussian": [0, 13], "gaussian_deform": [7, 8], "gem": 11, "gener": [0, 11, 13], "generate_first_men": [0, 10, 12], "generate_nod": [1, 3], "generic_nam": 6, "genet": [11, 13], "genmesh": 11, "geo": [5, 11], "geoemetr": 5, "geomeri": [0, 2], "geometr": [0, 2, 8, 9, 13], "geometri": [0, 1, 2, 8, 9, 10, 11], "geometry_dir": 8, "geometry_from_arrai": [7, 8], "geometry_from_fil": [7, 8], "get": [0, 9, 13], "get_abci_data": [0, 10, 12], "get_data": [0, 6], "get_default_operating_point": [0, 10, 12], "get_eigenmode_qoi": [0, 10, 12], "get_ngsolve_tune_r": [0, 10, 12], "get_objectives_valu": [], "get_peak": [0, 6], "get_pow": [0, 10, 12], "get_power_qoi": [0, 10, 12], "get_power_uq": [0, 10, 12], "get_qoi_valu": [0, 9, 10], "get_qois_valu": [0, 10, 12], "get_surface_resist": [0, 10, 12], "get_tune_r": [0, 10, 12], "get_uq_fm_result": [0, 10, 12], "get_uq_hom_result": [0, 10, 12], "get_uq_post": [0, 10, 12], "get_wakefield_data": [0, 9, 10], "get_wakefield_objectives_valu": [0, 10, 12], "get_wakefield_qoi": [0, 10, 12], "gev": [0, 13], "gfu_e": 8, "gfu_h": 8, "git": 13, "github": 13, "given": [0, 9, 11], "goal": 13, "goe": [11, 13], "gv": [0, 13], "h": [9, 13], "ha": 9, "had": 5, "half": [0, 5, 9], "handl": 9, "have": [11, 13], "help": 13, "here": [11, 13], "higher": [0, 9, 13], "ho": 11, "hold": 13, "home": 13, "homogen": 11, "horizont": 9, "how": [0, 13], "howev": [11, 13], "htm": 13, "http": 13, "hypercub": 13, "i": [0, 5, 8, 9, 11, 13], "i0": [0, 13], "ic": [9, 13], "ic_": 9, "id": 8, "ident": 13, "identifi": [0, 2, 13], "ignore_degener": 9, "img": [], "imped": 13, "implement": 13, "import": [9, 13], "improv": 13, "includ": [0, 8, 9, 11, 13], "inclus": [0, 9], "incorpor": 13, "indent": 13, "independ": 0, "index": [5, 10, 13], "info": [], "inform": [9, 13], "initi": 13, "initial_point": [0, 13], "initialis": 13, "inner": [0, 2, 8, 9], "input": [0, 11, 13], "inspect": [0, 10, 12, 13], "instal": 10, "instanc": 13, "instanti": 13, "instead": [0, 9], "int": [0, 2, 5, 8, 9], "integr": [9, 13], "intend": 11, "interact": 11, "interest": [0, 2, 9, 13], "interfac": [0, 3, 4, 10, 12], "interpol": 9, "interpolate_pareto": [0, 9, 10], "intersect": 9, "interv": 13, "interval_list": [0, 6], "introduct": 10, "invalu": 13, "invar": 0, "invers": 0, "io": [], "iri": [5, 9], "issu": 13, "iter": [2, 9], "iter_set": 0, "its": 13, "j": 9, "jac": [0, 9, 10], "jacobian": 9, "join_excel": [0, 6], "jp": 13, "json": [0, 9], "jx": 8, "jxy": 8, "jxy_bp": 8, "jxy_bp_i": 8, "jy": 8, "k": [0, 9, 13], "k_kick": 0, "k_loss": 0, "kcc": [0, 13], "kei": [0, 2, 6, 9], "kek": 13, "keyword": 13, "khz": [0, 13], "kick": 13, "kind": [0, 4], "know": 5, "kwarg": [0, 4, 5, 9], "kwargs_datafram": 0, "kwargs_pareto": 0, "l": [0, 8, 9, 13], "l_bp": [0, 9], "l_el": 8, "l_end_cell_par": [5, 8], "l_er": 8, "label": [0, 13], "largest": 9, "last": 0, "later": 0, "latest": 13, "latin": 13, "least": 13, "left": [0, 5, 8, 9, 13], "left_beam_pip": 5, "left_end_cel": 5, "legend": [0, 13], "legendr": 9, "length": [0, 5, 9, 13], "let": 13, "level": 13, "lft": 9, "lh": [0, 13], "like": [0, 5, 8, 9, 13], "limit": 9, "line": [0, 5, 9, 13], "line_intersect": [0, 9, 10], "linear": 9, "lineto": [0, 9, 10, 12], "link": 13, "linspac": [0, 9, 10, 12], "list": [0, 2, 4, 5, 8, 9, 13], "ll": [0, 13], "load": [0, 10, 12], "load_field": [7, 8], "load_mesh": [7, 8], "load_operating_point": [0, 10, 12], "load_plot_from_json": [0, 10, 12], "load_shape_spac": [0, 10, 12], "local": 13, "locat": [0, 13], "log": 13, "logic": [8, 13], "logo": [], "long": 11, "longitudin": [0, 13], "loss": 13, "lower": 13, "lower_bound": [0, 4], "m": [0, 13], "ma": [0, 13], "magnet": [0, 2, 8], "mai": 9, "main": 13, "make": [9, 13], "make_excel_summari": [0, 10, 12], "make_latex_summary_t": [0, 10, 12], "manipul": 13, "marker": [0, 5, 9, 13], "match": [9, 13], "math": 8, "mathemat": 11, "matplotlib": [0, 13], "max": 13, "max_step": 0, "maximis": 13, "maxwel": [11, 13], "mayb": 5, "md5": 13, "mean": [0, 2, 4, 5, 9], "mention": 11, "merit": [9, 11], "mesh": [0, 8, 10, 11], "mesh_arg": 8, "meta": 11, "metal": [0, 2, 8], "method": [0, 2, 3, 4, 5, 6, 8, 9, 10, 12, 13], "mhz": [0, 13], "mid": [0, 2, 5, 8, 13], "mid_cel": [0, 5, 8, 9], "mid_cells_par": [5, 8], "midcel": 13, "middl": [8, 9], "midpoint": 9, "might": [0, 9, 13], "min": 13, "minimis": 13, "mkdir": 13, "mm": [0, 13], "mode": [0, 2, 8, 11, 13], "modul": [11, 12], "momentum": [0, 13], "mon_interv": 6, "monopol": [0, 2, 8], "mont": 9, "more": [9, 11], "most": [11, 13], "move": 0, "mrot": [0, 5, 6, 13], "mt": [0, 5, 13], "mucol_studi": [], "multicel": 9, "multipac": [0, 8, 11], "multipact": [0, 8, 11], "multipl": [0, 13], "multiple_folders_data": [0, 6], "multiple_folders_data_parallel": [0, 6], "must": 13, "mutat": [0, 10, 12, 13], "mutation_factor": 13, "mv": [0, 13], "n": [0, 5, 8, 9], "n_c": [0, 13], "n_cell": [0, 2, 5, 8, 9, 13], "n_cell_last_run": [], "n_mode": [0, 2, 8], "n_modul": [0, 2, 13], "name": [0, 2, 4, 13], "names_list": 0, "nativ": 0, "nb": [0, 13], "ncav_mod": 0, "ncol": [0, 9], "ndarrai": [0, 2, 4, 8, 9], "necessai": 13, "necessari": 13, "need": 5, "negate_list": [0, 10, 12], "nest": 13, "never": 5, "new": 13, "nextpt": [0, 9], "nf": [0, 5, 13], "ngsolv": [0, 7, 10, 11], "ngsolvemevp": [0, 2, 7, 8, 11], "no_of_cel": [5, 8], "no_of_gener": 13, "no_of_modul": [5, 8], "no_pareto_optim": 0, "node": 9, "nodes_onli": 4, "nodes_to_cst_sweep_input": [0, 10, 12], "non": 9, "none": [0, 2, 5, 6, 8, 9, 13], "norm": 0, "norm_length": [], "normal": 8, "normal_dist": [0, 9, 10], "normal_uncertain": [0, 4], "normalis": [], "note": [0, 13], "notebook": 13, "notic": 13, "now": [11, 13], "np": [0, 9], "nu_": [0, 13], "num": [0, 9], "num_proc": 4, "number": [0, 2, 5, 8, 9, 13], "o": [9, 13], "obj": 9, "object": [0, 2, 4, 5, 6, 8, 9, 13], "objectives_unprocess": 0, "obtain": 13, "oc": [9, 13], "oc_l": 9, "oc_r": [9, 13], "off": [11, 13], "offspr": 13, "oftentim": 13, "ohm": [0, 13], "onc": 13, "one": [0, 8, 9, 13], "onli": 0, "op": 0, "op_field": 0, "op_point": [0, 13], "op_points_list": 0, "op_pts_list": 0, "oper": [0, 11, 13], "operating_point": [0, 13], "operationpoint": [0, 10, 12], "opt": [0, 8, 9], "optimis": [0, 10, 12], "optimisation_config": [0, 13], "option": [0, 9, 13], "order": [0, 9, 13], "orig_writecavityformultipac": [], "orig_writecavityformultipac_flat_top": [], "origin": 13, "oscil": [0, 13], "other": [0, 4, 11, 13], "our": 13, "out": 13, "outer": 9, "output": [0, 9, 11, 13], "overwrit": [0, 13], "overwritefold": [0, 10, 12], "p": [0, 9], "p1": 9, "p2": 9, "p_true": 0, "packag": [10, 12], "page": [10, 13], "panda": [0, 9], "paper": 11, "par_end": 2, "par_end_l": 9, "par_end_r": 9, "par_mid": [2, 9], "parallel": 6, "parallelis": 10, "param": [0, 2, 8], "paramet": [0, 2, 4, 5, 8, 9, 13], "parameteris": 13, "parent": [0, 2, 8], "parentdir": [0, 2, 5, 8], "pareto": [9, 13], "pareto1": 9, "pareto2": 9, "pareto_front": [0, 10, 12], "pareto_front_": [0, 10, 12], "pareto_index": 0, "parti": 10, "particular": 13, "partit": 0, "pass": 13, "path": [0, 2, 9, 13], "pattern": 13, "pd": 0, "pdf": 13, "pdfft": 13, "peak": 13, "perform": [11, 13], "period": 11, "pid": 13, "pii": 13, "pillbox": [0, 7, 8, 10, 12], "pipe": [5, 8, 9], "plan": 11, "plot": [0, 8, 9, 10, 12, 13], "plot_animate_wakefield": [0, 10, 12], "plot_axis_field": [0, 10, 12], "plot_band": [0, 6], "plot_cavities_contour": [0, 10, 12], "plot_cavities_contour_dimens": [0, 10, 12], "plot_cavity_geometri": [], "plot_cavity_geometry_cli": [], "plot_compare_all_bar": [0, 10, 12], "plot_compare_all_scatt": [0, 10, 12], "plot_compare_bar": [0, 10, 12], "plot_compare_eigenmod": [0, 10, 12], "plot_compare_fm_bar": [0, 10, 12, 13], "plot_compare_fm_scatt": [0, 10, 12], "plot_compare_hom_bar": [0, 10, 12, 13], "plot_compare_hom_scatt": [0, 10, 12], "plot_compare_power_scatt": [0, 10, 12], "plot_compare_wakefield": [0, 10, 12], "plot_config": 0, "plot_cutoff": [0, 10, 12], "plot_dispers": [0, 10, 12], "plot_field": [0, 7, 8, 10, 12, 13], "plot_from_json": [0, 10, 12], "plot_gun": [], "plot_label": [0, 13], "plot_mesh": [0, 7, 8, 10, 12, 13], "plot_multipac_triplot": [0, 10, 12], "plot_nam": 0, "plot_pareto": [0, 10, 12], "plot_pareto_surfac": [0, 10, 12], "plot_pillbox_geometri": [0, 9, 10], "plot_power_comparison": [0, 10, 12], "plot_surface_field": [0, 10, 12], "plot_threshold": [0, 10, 12], "plot_uq_geometri": [0, 10, 12], "plotter": [0, 8], "point": [0, 9, 11, 13], "pol": [0, 2, 8], "polar": 0, "polaris": 0, "polynomial_chao": 4, "popul": [0, 13], "posit": 9, "post": 11, "postprocess": 11, "potenti": 13, "power": [0, 2, 13], "powershel": 13, "pp": 13, "pprint": 13, "pprintpp": 13, "pr": [], "practic": 9, "preceed": 13, "precis": 9, "prettyprint": 13, "previous": 11, "prevpt": [0, 9], "print": 13, "print_": [1, 2], "prior": 13, "problem": 9, "proc": [0, 2], "proc_cell_typ": 0, "proc_count": 6, "proc_freq": 0, "proc_keys_list": [0, 2], "proc_num": [0, 2], "proc_tune_vari": 0, "procedur": 11, "process": [0, 11, 13], "process_constraint": [0, 10, 12], "process_interv": [0, 6, 10, 12], "process_object": [0, 10, 12], "processor": 0, "processor_nod": [0, 2], "processor_shape_spac": 0, "produc": 13, "profil": 10, "program": 13, "progress_list": 0, "project": [0, 2, 8, 9, 13], "project_fold": [0, 8, 13], "projectdir": [0, 2, 5, 8, 9], "proof_filenam": [0, 10, 12], "properli": 0, "properti": 13, "prove": 13, "provid": [0, 2, 13], "pseudo_shape_spac": [0, 2], "pseudo_shape_space_proc": [], "pull": [], "purpos": [5, 11], "put": 13, "py": 13, "py_dakota": [1, 3], "pycal": [1, 3], "python": [0, 2, 11, 13], "python3": 13, "pytun": [0, 1], "pytunengsolv": [1, 2], "q": [0, 9, 13], "qmc": 0, "qoi": [0, 2, 13], "qois_al": [0, 10, 12], "qois_fm": [0, 10, 12], "qois_hom": [0, 10, 12], "quad_stroud3": [0, 9, 10, 12], "quadratur": [0, 9, 13], "quantif": [0, 2, 10], "quantificaion": 11, "quantiti": [0, 2, 9, 13], "qudratur": 0, "quick": 13, "quickstart": [], "r": [0, 13], "r8_mop": [0, 9, 10], "r_end_cell_par": [5, 8], "r_q": 0, "rac": 8, "radian": 9, "radiat": 0, "radiu": [0, 9, 13], "random": 13, "rang": [0, 9], "ratio": 8, "ration": 0, "raw": [], "rdim": [0, 9], "re": 13, "read": [0, 11], "readabl": [5, 13], "readi": 13, "reason": 13, "recommend": 13, "record": 13, "recursive_sav": [0, 10, 12], "reentrant": 13, "reentrant_mid_cel": 13, "refer": [0, 9], "refin": 13, "reflect": 5, "regular": [5, 11], "relat": 11, "releas": 11, "relev": [0, 4, 13], "remov": [0, 5], "remove_cav": [0, 10, 12], "remove_duplicate_valu": [0, 10, 12], "ren": 13, "renam": [5, 13], "reorder_legend": [0, 9, 10], "repeat": 13, "replac": [9, 13], "repositori": 13, "repres": 13, "req": [0, 2, 8, 9, 13], "request": 6, "requir": [0, 11, 13], "rerun": [0, 13], "respons": [0, 3, 4, 10, 12], "result": [0, 8, 9, 11, 13], "resum": [0, 2], "resut": [], "retain": 13, "retriev": 0, "return": [0, 2, 5, 8, 9, 13], "revisit": 13, "revolut": [0, 13], "rf": 13, "rf_config": 0, "rfgun": [0, 10, 12], "ri": [0, 8, 9, 13], "ri_el": 8, "ri_er": 8, "ri_list": 0, "right": [0, 5, 8, 9, 13], "right_beam_pip": 5, "right_end_cel": 5, "root": 13, "rotat": 0, "rule": 9, "run": [0, 8, 11, 13], "run_abci": [0, 10, 12], "run_analysi": [0, 3, 4, 10, 12], "run_eigenmod": [0, 10, 12, 13], "run_eigenmode_": [0, 10, 12], "run_eigenmode_parallel": [0, 10, 12], "run_multipact": [0, 10, 12], "run_optimis": [0, 10, 12, 13], "run_sequenti": [], "run_sequential_wakefield": [], "run_tun": [0, 10, 12, 13], "run_tune_": [0, 10, 12], "run_tune_ngsolv": [0, 10, 12], "run_tune_opt": [0, 10, 12], "run_tune_parallel": [0, 10, 12], "run_tune_uq": [1, 2], "run_uq": [0, 10, 12], "run_wakefield": [0, 10, 12, 13], "run_wakefield_": [0, 10, 12], "run_wakefield_opt": [0, 10, 12], "run_wakefield_parallel": [0, 10, 12], "rz_conjug": [1, 5], "s0168900202016200": 13, "s2": 13, "same": [0, 13], "sampl": [0, 13], "save": [0, 8, 10, 12, 13], "save_all_plot": [0, 10, 12], "save_excel": 6, "save_field": [7, 8], "save_last": [], "save_mesh": [7, 8], "save_plot_as_json": [0, 10, 12], "save_shape_spac": [0, 10, 12], "save_tune_result": [0, 9, 10], "scale": 9, "scale_x": 0, "scatter": 0, "scienc": 13, "sciencedirect": 13, "scripts_fold": 0, "sd": 9, "search": [0, 10, 13], "section": [11, 13], "see": [9, 13], "seed": 13, "segment": 9, "select": [0, 13], "select_solv": [0, 2], "self": 11, "sequenc": 13, "sergei": 11, "set": [0, 2, 9, 11, 13], "set_beampip": [0, 10, 12], "set_boundary_condit": [0, 10, 12], "set_cavities_field": [0, 10, 12], "set_color": [0, 10, 12], "set_end_cell_left": [0, 10, 12], "set_end_cell_right": [0, 10, 12], "set_geom_paramet": [1, 5], "set_geom_parameters_flattop": [1, 5], "set_mid_cel": [0, 10, 12], "set_n_cel": [0, 10, 12], "set_nam": [0, 10, 12], "set_parameteris": [0, 10, 12], "set_plot_label": [0, 10, 12], "set_wall_materi": [0, 10, 12], "set_yscal": 13, "setup": [10, 12, 13], "sever": [0, 9, 13], "shape": [0, 2, 9, 13], "shape_spac": [0, 2, 6, 13], "shape_space_multi": 0, "shared_funct": [0, 10, 12], "shield": [], "shift": [0, 2, 5, 8], "shortest_direct": [0, 9, 10], "should": [11, 13], "show": [0, 8, 13], "show_valid_operating_point_structur": [0, 10, 12], "show_welcom": [0, 10, 12], "shown": [5, 9], "side": 8, "sigma": [8, 13], "sigma_b": [0, 13], "sigma_sr": [0, 13], "sigma_z": 0, "sim_fold": [2, 8, 9], "similar": 13, "simpl": 13, "simplecel": [0, 8, 9, 13], "simplic": 0, "simul": [0, 8, 9, 11, 13], "simulationdata": [], "sinc": [0, 2], "singl": [0, 9, 13], "size": 0, "slan": [0, 9], "slan_opt": 9, "slansr": 11, "slash": 9, "slight": 13, "so": [0, 9, 13], "sobol": [0, 13], "softwar": 11, "solv": [11, 13], "solver": [0, 2, 9, 10, 12, 13], "solver_args_dict": [0, 2], "solver_dict": [0, 2], "some": [0, 5, 11, 13], "somethign": 11, "sort": 5, "sourc": [0, 2, 4, 5, 6, 8, 9], "space": [0, 2, 13], "specif": [0, 9, 13], "specifi": [0, 5, 8, 9, 11, 13], "sr": 0, "stack": 13, "start": [0, 8, 9], "start_angl": [0, 9], "start_optimis": [0, 10, 12], "state": 9, "static": [0, 2, 5, 6, 8], "std_deviat": [0, 4], "step": [0, 8, 9], "step_refin": 0, "still": 0, "stop": [0, 9], "str": [0, 2, 8, 9], "straightforward": 13, "stroud": [0, 9, 10, 12], "stroud3": [0, 13], "stroud5": 0, "structur": [0, 11, 13], "studio": 9, "study_converg": [0, 10, 12], "sub": [0, 8, 13], "sub_dir": [0, 2, 5], "subdir": [0, 5, 8], "submodul": [1, 3, 7, 10, 12], "subpackag": [10, 12], "success": 9, "suffix": 13, "superlan": [], "support": [0, 11, 13], "sure": 13, "surfac": [0, 8], "sweep": [0, 10, 12], "sweep_config": 0, "sy": 13, "symmetr": 11, "synchrotron": [0, 13], "system": [0, 9, 13], "t": [0, 5, 13], "t1": 9, "t2": 9, "tab_var": [0, 9], "tabl": 13, "tag": 0, "take": 0, "tangent": [5, 9], "tangent_check": 9, "tangent_coord": [0, 9, 10], "target": 13, "target_freq": 2, "tau_xi": [0, 13], "tau_z": [0, 13], "temp_fold": 6, "tempereatur": [0, 13], "tesla": 13, "tesla_mid_cel": 13, "text": [0, 11], "textcoord": 0, "thei": 13, "them": [9, 11], "theori": 11, "therefor": 13, "thi": [0, 5, 9, 11, 13], "third": 10, "three": 11, "threshold": [6, 9], "through": [11, 13], "tiem": 11, "time": [0, 11, 13], "to_multicel": [0, 9, 10, 12], "togeth": 13, "tool": 13, "total": [0, 13], "transform": 11, "transvers": [0, 13], "tree": 13, "triplot": 0, "true": [0, 8, 9, 13], "try": 13, "tune": [0, 1, 5, 10], "tune_config": [0, 2, 13], "tune_flattop": [1, 2], "tune_last_gultig": [], "tune_ngsolv": [1, 2], "tune_var": 2, "tune_vari": [0, 2], "tuner": [0, 1], "tupl": 0, "tv_list": 2, "two": [0, 9, 13], "type": [0, 2, 4, 5, 8, 9, 10, 11], "typic": [9, 13], "ubt": [5, 13], "unavail": 13, "uncertain": [0, 4], "uncertainti": [0, 2, 10], "under": 0, "understand": 10, "uniform": 13, "uniform_uncertain": [0, 4], "unit": 9, "until": 13, "unus": 5, "up": 9, "updat": 9, "update_alpha": [0, 9, 10], "upper": 13, "upper_bound": [0, 4], "uq": [0, 1, 10, 11, 12, 13], "uq_config": [0, 2, 13], "uq_multicell_": [0, 10, 12], "uq_multicell_sequenti": [], "uq_ngsolve_parallel": [], "uq_ngsolve_parallel_multicel": [], "uq_parallel": [0, 10, 12], "uq_parallel_multicel": [0, 10, 12], "uq_parallel_tun": [1, 2], "uq_path": [0, 2], "uq_tun": [1, 2], "us": [0, 2, 8, 9, 11, 13], "user": 13, "uss": 13, "util": [0, 10, 12], "v": [0, 8, 13], "valu": [0, 5, 9, 13], "var": 0, "variabl": [0, 3, 4, 5, 9, 10, 12, 13], "variat": 0, "variou": 11, "veloc": 8, "version": 13, "vhf_gun": [7, 8], "vicin": 13, "view": [8, 9, 13], "visual": 13, "visualis": 10, "voltag": [0, 13], "w": 9, "w_geometryview": [], "wa": 13, "wai": 13, "wakefield": [0, 1, 10], "wakefield_config": [0, 13], "wakefield_qoi": 13, "wakelength": [0, 13], "wall": [0, 2, 8], "want": 13, "warn": [], "waveguid": 11, "we": 13, "weight": [0, 9, 13], "weighted_mean_obj": [0, 9, 10, 12], "well": 9, "wg_l": 5, "wg_m": [0, 5, 13], "wget": 13, "what": [0, 5], "when": [0, 11, 13], "whether": [0, 2], "which": [0, 8, 11, 13], "wide": 13, "window": [9, 13], "wise": 9, "within": 13, "without": 13, "wm": 0, "work": [0, 13], "would": 13, "wp_dict": 0, "write": [5, 8, 9, 11, 13], "write_cavity_geometry_cli": [0, 9, 10], "write_cavity_geometry_cli_flattop": [0, 9, 10], "write_contour": [], "write_cst": 0, "write_cst_paramt": [0, 9, 10], "write_dakota_input": [1, 3], "write_geometri": [7, 8], "write_geometry_multicel": [7, 8], "write_geometry_ngsolv": [], "write_gun_geometri": [0, 9, 10], "write_input_fil": [0, 3, 4, 10, 12], "write_output": [1, 2], "write_pillbox_geometri": [0, 9, 10], "writecavityformultipac": [0, 9, 10], "writecavityformultipac_flat_top": [], "writecavityformultipac_multicel": [0, 9, 10], "written": [0, 5, 11], "wrong": 13, "www": 13, "x": 9, "x1": 9, "x2": 9, "x_1": 9, "x_2": 9, "x_center": [0, 8], "x_valu": 9, "xin": 0, "xy": 0, "xycoord": 0, "xytext": 0, "y": 9, "y1": 9, "y2": 9, "y_1": 9, "y_2": 9, "y_center": [0, 8], "y_values1": 9, "y_values2": 9, "yang": 11, "yet": [], "yin": 0, "you": 13, "z": [0, 9, 13], "z_sr_4": 13, "zip": 13, "zl": [0, 13], "zr12": 5, "zr12_bpl": 5, "zr12_bpr": 5, "zr12_l": 5, "zr12_m": 5, "zr12_r": 5, "zt": 13}, "titles": ["cavsim2d package", "cavsim2d.analysis package", "cavsim2d.analysis.tune package", "cavsim2d.analysis.uq package", "cavsim2d.analysis.uq.dakota_scripts package", "cavsim2d.analysis.wakefield package", "cavsim2d.data_module package", "cavsim2d.solvers package", "cavsim2d.solvers.NGSolve package", "cavsim2d.utils package", "cavsim2d documentation!", "Introduction", "cavsim2d", "Installation", "setup module"], "titleterms": {"": [], "abci_cod": 5, "abci_data": 6, "abci_geometri": 5, "advanc": 13, "analysi": [1, 2, 3, 4, 5, 11, 13], "avsim2d": [], "caviti": [0, 13], "cavsim2d": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12], "code": 13, "configur": 13, "content": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9], "dakota_script": 4, "data_modul": 6, "dictionari": 13, "document": 10, "eigen_ngsolv": 8, "eigenmod": [11, 13], "ellipt": [], "exampl": 13, "field": 13, "folder": [], "generate_nod": 4, "geometri": [5, 13], "indic": 10, "instal": 13, "introduct": 11, "mesh": 13, "modul": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 14], "ngsolv": 8, "optimis": [11, 13], "packag": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9], "parallelis": 13, "parti": 13, "profil": 13, "py_dakota": 4, "pycal": 4, "pytun": 2, "quantif": [11, 13], "quickstart": 10, "setup": 14, "shared_funct": 9, "solver": [7, 8], "structur": [], "submodul": [0, 2, 4, 5, 6, 8, 9], "subpackag": [0, 1, 3, 7], "tabl": 10, "tesla": [], "third": 13, "tune": [2, 13], "tuner": 2, "type": 13, "uncertainti": [11, 13], "understand": 13, "uq": [3, 4], "util": 9, "visualis": 13, "wakefield": [5, 11, 13], "welcom": [], "write_dakota_input": 4}})